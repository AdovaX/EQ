{"version":3,"sources":["./src/app/company/project-managment/project-managment-routing.module.ts","./src/app/Services/project.service.ts","./src/app/company/project-managment/project-managment.module.ts","./src/app/company/project-managment/create-project/create-project.component.ts","./src/app/company/project-managment/create-project/create-project.component.html","./src/app/company/project-managment/view-assignments/view-assignments.component.ts","./src/app/company/project-managment/view-assignments/view-assignments.component.html","./src/app/company/project-managment/find-maching/find-maching.component.ts","./src/app/company/project-managment/find-maching/find-maching.component.html","./src/app/company/project-managment/create-assignments/create-assignments.component.ts","./src/app/company/project-managment/create-assignments/create-assignments.component.html","./src/app/company/project-managment/projects/projects.component.ts","./src/app/company/project-managment/projects/projects.component.html","./src/app/company/project-managment/view-projects/view-projects.component.ts","./src/app/company/project-managment/view-projects/view-projects.component.html"],"names":[],"mappings":"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","file":"project-managment-project-managment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { CreateProjectComponent } from './create-project/create-project.component'; \nimport { CreateAssignmentsComponent } from './create-assignments/create-assignments.component';\nimport { ViewAssignmentsComponent } from './view-assignments/view-assignments.component';\nimport { ViewProjectsComponent } from './view-projects/view-projects.component';\nimport { FindMachingComponent } from './find-maching/find-maching.component';\n\nconst routes: Routes = [\n  {path : '' , component:ProjectsComponent},\n  {path : 'Projectmanagement' , component:ProjectsComponent},\n  {path : 'Createproject' , component:CreateProjectComponent},\n  {path : 'Createassignment/:id' , component:CreateAssignmentsComponent},\n  {path : 'Requirements/:id' , component:ViewAssignmentsComponent},\n  {path : 'ProjectDetails/:id' , component:ViewProjectsComponent},\n  {path : 'Findmaching/:id' , component:FindMachingComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectManagmentRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpHeaders} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport {Project} from '../class/Project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService  {\n\n  private REST_API_SERVER = \"http://localhost:8080\";\n  User_id = sessionStorage.getItem('USER_ID');  \n  Company_id = sessionStorage.getItem('COMPANY_ID'); \n  constructor(private http: HttpClient) {}\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  handleError(error) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n       errorMessage = error.error.message;\n    } else {\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n }\n createProject(data): Observable<Project[]>{ \n\n    data.User_id = this.User_id\n    data.Company_id = this.Company_id\n  \nreturn this.http.post<Project[]>(this.REST_API_SERVER + '/hiring/createproject', data);\n  \n}\ngetProjects(): Observable<Project[]>{ \nvar data = {\n    \"Company_id\" : this.Company_id\n} \nreturn this.http.post<Project[]>(this.REST_API_SERVER + '/hiring/projectList', data);\n}\nsearchProjectById(Project_id){\n  var data = {\n    \"Project_id\" : Project_id\n} \nreturn this.http.post<Project[]>(this.REST_API_SERVER + '/hiring/searchProjectById', data);\n}\ngetDomains(){\n  \n  return this.http.get<any>(this.REST_API_SERVER + '/project/getDomains')\n  .pipe(retry(1),\n    catchError(this.handleError)\n  )\n\n}\ngetTechnology(){\n  return this.http.get<any>(this.REST_API_SERVER + '/project/getTechnology')\n  .pipe(retry(1),\n    catchError(this.handleError)\n  )\n}\ngetEducation(){\n  return this.http.get<any>(this.REST_API_SERVER + '/project/getEducation')\n  .pipe(retry(1),\n    catchError(this.handleError)\n  )\n}\ngetRoles(){\n  return this.http.get<any>(this.REST_API_SERVER + '/project/getRoles')\n  .pipe(retry(1),\n    catchError(this.handleError)\n  )\n}\ncreateRequirement(data,technology_list,domain_list,jobRole_list,education_list,Project_id): Observable<any>{ \n  data.Technology_id=technology_list;\n  data.Domain_id = domain_list;\n  data.Roles_id = jobRole_list;\n  data.Certification=education_list;\n  data.User_id = Number(this.User_id);\n  data.Company_id = Number(this.Company_id); \n  data.ProjectId=Project_id;\n  console.log(data);\nreturn this.http.post<any>(this.REST_API_SERVER + '/project/createassignment', data);\n\n}\ngetAssignmentsById(Project_id){\n  var data = {\n    \"Project_id\" : Project_id,\n    \"User_id\" : this.User_id\n} \nreturn this.http.post<Project[]>(this.REST_API_SERVER + '/project/getAssignmentsById', data);\n}\ngetProjectById(Project_id){\n  var data = {\n    \"Project_id\" : Project_id,\n    \"User_id\" : this.User_id\n} \nreturn this.http.post<Project[]>(this.REST_API_SERVER + '/project/getProjectById', data);\n}\nmachingResources(Requirement_id):Observable<any>{\n  var data = {\n    \"Requirement_id\" : Requirement_id\n} \nreturn this.http.post<any[]>(this.REST_API_SERVER + '/project/ProjectMatching', data);\n}\ntoogleActive(Project_id,currentValue){\n  var data = {\n    \"Project_id\" : Project_id,\n    \"Status\" : currentValue\n} \nreturn this.http.post<any[]>(this.REST_API_SERVER + '/project/updateProjectStatus', data);\n}\nupdateStart(fromDate,Project_id){\n  var data = {\n    Company_id : this.Company_id, \n    Project_id :Project_id,\n    Start_date:fromDate\n  }\n  console.log(data);\n  return this.http.post<any[]>(this.REST_API_SERVER + '/project/updateStart/', data);\n}\nupdateEnd(toDate,Project_id){\n  var data = {\n    Company_id : this.Company_id, \n    Project_id :Project_id,\n    End_date:toDate\n  }\n  return this.http.post<any[]>(this.REST_API_SERVER + '/project/updateEnd/', data);\n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule} from '@angular/forms' \nimport { FormsModule } from '@angular/forms';\n\nimport { ProjectManagmentRoutingModule } from './project-managment-routing.module';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { CreateProjectComponent } from './create-project/create-project.component'; \nimport {   MatInputModule } from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport {SharedModuleModule} from '../../shared-module/shared-module.module';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { CreateAssignmentsComponent } from './create-assignments/create-assignments.component';\nimport { ViewAssignmentsComponent } from './view-assignments/view-assignments.component';\nimport { ViewProjectsComponent } from './view-projects/view-projects.component';\nimport { FindMachingComponent } from './find-maching/find-maching.component';\nimport {MatTableModule} from '@angular/material/table'; \nimport { MatSortModule } from '@angular/material/sort'; \nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [ProjectsComponent, CreateProjectComponent, CreateAssignmentsComponent, ViewAssignmentsComponent, ViewProjectsComponent, FindMachingComponent,],\n  imports: [\n    CommonModule,\n    ProjectManagmentRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModuleModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatStepperModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatMenuModule,\n    MatInputModule,MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatSortModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatPaginatorModule,\n    NgCircleProgressModule.forRoot({\n      // set defaults here\n      \"backgroundPadding\": 5,\n      \"radius\": 14,\n      \"space\": -10,\n      \"toFixed\": 0,\n      \"maxPercent\": 1000,\n      \"outerStrokeGradient\": false,\n      \"outerStrokeWidth\": 4, \n      \"innerStrokeColor\": \"#fff\",\n      \"innerStrokeWidth\": 4, \n      \"titleFontSize\": \"14\",\n      \"imageHeight\": 116,\n      \"animationDuration\": 300,\n      \"showUnits\": false,\n      \"showBackground\": false,\n      \"showSubtitle\":false,\n      \"lazy\": true\n    })\n  ]\n})\nexport class ProjectManagmentModule { }\n","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\"\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.css']\n})\nexport class CreateProjectComponent implements OnInit {\n  Project_Form: FormGroup; \n  submitted = false; \n\n  today = moment().format('YYYY-MM-DD'); \n  constructor(private ProjectService :ProjectService, private formBuilder: FormBuilder,private router:Router) { }\n\n  Project_name = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Project_location = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Start_date = new FormControl('', [ Validators.required ]);\n  End_date = new FormControl('', [ Validators.required]);\n  Description = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Status = new FormControl('ACTIVE', [ Validators.required ]);\n  Need_remote = new FormControl('YES', [ Validators.required ]);\n\n  ngOnInit(): void {\n    this.Project_Form = this.formBuilder.group({\n      Project_name : this.Project_name,\n      Project_location : this.Project_location,\n      Start_date : this.Start_date,\n      End_date : this.End_date,\n      Description : this.Description,\n      Status : this.Status,\n      Need_remote : this.Need_remote\n    });\n  }\nonSubmit(){\n  console.log(this.Project_Form.value);\n  if (this.Project_Form.invalid) {  \n    this.submitted =true;\n    return;\n  }else{\n    this.ProjectService.createProject(this.Project_Form.value).subscribe(data =>{\n        if(data['Project_id']>0){\n          this.router.navigate(['company/Projectmanagement']); \n\n        } \n    }, error => {\n      console.log(error); \n    });\n  }\n\n}\nget f() { return this.Project_Form.controls; }\n\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Create New Project </h4> \n       </div> \n       </div> \n\n    <div class=\"card\">\n        <div class=\"card-body\">  \n            <form [formGroup]=\"Project_Form\" (ngSubmit)=\"onSubmit()\">\n\n       <div class=\"row\">\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Project Name<span class=\"redColor\">*</span> </label>\n             <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Project_name\"   id=\"Project_name\" required \n             name=\"Project_name\"  placeholder=\"Project Name \" > \n             <div *ngIf=\"submitted && f.Project_name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Project_name.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Location<span class=\"redColor\">*</span>  </label>\n             <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Project_location\"  id=\"Project_location\" required\n             name=\"Project_location\"  placeholder=\"Location \" > \n             <div *ngIf=\"submitted && f.Project_location.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Project_location.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Start Date<span class=\"redColor\">*</span> </label>\n             <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Start_date\"  id=\"Start_date\" required\n             name=\"Start_date\"  placeholder=\"Start Date  \" > \n             <div *ngIf=\"submitted && f.Start_date.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Start_date.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">End Date<span class=\"redColor\">*</span>  </label>\n             <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"End_date\"  id=\"End_date\" required\n             name=\"End_date\"  placeholder=\"End_date\" > \n             <div *ngIf=\"submitted && f.End_date.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.End_date.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Remote Availability<span class=\"redColor\">*</span> </label> <br>\n             <mat-radio-group aria-label=\"Select an option\" formControlName=\"Need_remote\" name=\"Need_remote\">\n                <mat-radio-button value=\"YES\"  > Yes</mat-radio-button> &nbsp;\n                <mat-radio-button value=\"NO\">NO</mat-radio-button>\n              </mat-radio-group>\n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Project status<span class=\"redColor\">*</span> </label> <br>\n             <mat-radio-group aria-label=\"Select an option\" formControlName=\"Status\" name=\"Status\">\n                <mat-radio-button value=\"ACTIVE\"  > Active</mat-radio-button>&nbsp;\n                <mat-radio-button value=\"NONACTIVE\">InActive</mat-radio-button>\n              </mat-radio-group>\n            </div>\n        </div>\n\n        <div class=\"col-sm-12\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Project Description<span class=\"redColor\">*</span> </label>\n             <textarea class=\"form-control form-control-square\" placeholder=\"Briefly describe your project\" rows=\"8\" formControlName=\"Description\" name=\"Description\" required></textarea>\n             <div *ngIf=\"submitted && f.Description.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Description.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>  \n       </div>\n       <div class=\"row\"> \n        <div class=\"col-sm-12\">\n        <div class=\"right\">\n            <button type=\"submit\" class=\"btn btn-primary m-1\"   >\n                Proceed <span class=\"fa fa-share\"></span> </button>\n        </div>\n    </div>\n</div>\n </form>\n\n       </div>\n       </div>\n\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { MatSort } from '@angular/material/sort'; \nimport { MatTableDataSource } from '@angular/material/table'; \nimport {MatPaginator} from '@angular/material/paginator'; \nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-view-assignments',\n  templateUrl: './view-assignments.component.html',\n  styleUrls: ['./view-assignments.component.css']\n})\nexport class ViewAssignmentsComponent implements OnInit {\n  Project_id;\n  assignmentLists=[];\n  projectName =\"\";\n  today = moment().format('YYYY-MM-DD'); \n  @ViewChild(MatSort) sort: MatSort; \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource = new MatTableDataSource();\n  displayedColumns: string[] = ['No','Requirement_name','No_of_resources','Hours_per_day','Hours_per_week','Hours_per_month','Action'];\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  \n  } \n  constructor(  private _Activatedroute:ActivatedRoute,private Router:Router, private ProjectService :ProjectService, private formBuilder: FormBuilder,private router:Router) { \n    this.Project_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n   \n  }\n\n  ngOnInit(): void {\n  this.getAssignments();\n  }\ngetAssignments(){\nthis.ProjectService.getAssignmentsById(this.Project_id).subscribe(data =>{\n  this.assignmentLists = data;\n  this.dataSource.data=data;\n  this.projectName = data[0]['ProjectsTb'].Project_name; \n  console.log(data);\n}, error => {\nconsole.log(error); \n});\n}\ncreateAssignment(){\n  this.Router.navigate(['/company/Projectmanagement/Createassignment',this.Project_id]); \n\n}\nfindMatching(id){ \n\n  this.router.navigate(['company/Projectmanagement/Findmaching',id]); \n\n}\n}\n","<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Assignment Lists</h4> \n       </div> \n       <div class=\"col-sm-6\">\n        <div class=\"right\">\n        <button type=\"button\" class=\"btn btn-primary m-1\" (click)=\"createAssignment()\" >\n            Create New <span class=\"fa fa-plus\"></span> </button>\n    </div> \n    </div>\n       </div> \n\n       <div class=\"card\">\n        <div class=\"card-body\">  \n            <p class=\"pTitle\"> PROJECT : {{projectName}} </p>\n       <div class=\"row\"> \n        <div class=\"col-sm-12\">\n\n\n            <div class=\"table-responsive\">\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n                      <td mat-cell *matCellDef=\"let element;let i = index;\"> {{i + 1}} </td>\n                    </ng-container>\n                   \n                  \n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"Requirement_name\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Requirement </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Requirement_name}} &nbsp;</td>\n                    </ng-container>\n                   \n                    <ng-container matColumnDef=\"No_of_resources\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Resources </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.No_of_resources}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Hours_per_day\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Hours/day </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Hours_per_day}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Hours_per_week\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Hours/week </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Hours_per_week}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Hours_per_month\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Hours/month </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Hours_per_month}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Action\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                      <td mat-cell *matCellDef=\"let element\"> \n                        <button mat-button color=\"primary\" (click)=\"findMatching(element.Requirement_id)\">Find matching <span class=\"fa fa-users\"></span> </button>\n\n                    </td>\n                    </ng-container> \n                    \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> \n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50 , 100]\" showFirstLastButtons></mat-paginator>\n                  </div> \n                  </div>\n                  </div>\n\n    </div>\n</div>\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-find-maching',\n  templateUrl: './find-maching.component.html',\n  styleUrls: ['./find-maching.component.css']\n})\nexport class FindMachingComponent implements OnInit {\n  Requirement_id;\n  Resource_list=[];\n  noResource = false;\n  constructor(private _Activatedroute:ActivatedRoute,private ProjectService :ProjectService) { \n    this.Requirement_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n\n  }\n\n  ngOnInit(): void {\n\n    this.getMatchingProfiles();\n   \n  }\n  getMatchingProfiles(){\n    this.ProjectService.machingResources(this.Requirement_id).subscribe(data =>{\n    console.log(data);\n      \n    if(data.status == false){ \n      console.log(\"No resources\");\n      this.noResource =true;\n    }else{\n      this.noResource =false;\n      console.log(\"Resources found\" + Object.keys(data).length);\n      this.Resource_list =data;\n    }\n    \n}, error => {\n  console.log(error); \n});\n  }\n\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Matching Resources</h4> \n       </div> \n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">     \n           \n            <div class=\"table-responsive\">\n                <table id=\"default-datatable\" class=\"table table-bordered\">\n                  <thead>\n                      <tr>\n                          <th>No</th>\n                          <th>Name</th>\n                          <th>Rate</th> \n                          <th>Matching</th> \n                      </tr>\n                  </thead>\n                  <tbody>\n                      <div *ngIf=\"noResource\"> No Resources are available for this requirement! </div>\n                    <tr *ngFor=\"let item of Resource_list;let i = index;\">\n                        <th>{{ i + 1 }}</th>\n                        <th>{{ item.Resource.Resource_name }}</th> \n                        <th>{{ item.Resource.Resource_rate + \"₹\" }}</th> \n                        <th>{{ item.Matching + \"%\" }}</th> \n                        \n\n                        </tr>\n                    </tbody>\n\n                  </table>\n                  </div> \n\n\n\n\n\n\n\n\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>"," import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { ListingManagerService } from '../../../Services/listing-manager.service';\nimport {MatDialog,MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { PopupTechnologyComponent } from '../../popup-technology/popup-technology.component';\nimport { PopupEducationComponent } from '../../popup-education/popup-education.component';\nimport { PopupDomainComponent } from '../../popup-domain/popup-domain.component';\nimport { PopupRoleComponent } from '../../popup-role/popup-role.component';\n\n@Component({\n  selector: 'app-create-assignments',\n  templateUrl: './create-assignments.component.html',\n  styleUrls: ['./create-assignments.component.css']\n})\nexport class CreateAssignmentsComponent implements OnInit {\n  Project_id;\n  Requirement_Form: FormGroup; \n  submitted = false; \n  domainsList=[];\n  rolesList=[];\n  technologiesList=[];\n  educationsList=[];\n  selectedTechnologies=[];\n  selectedDomains=[];\n  selectedEducation=[];\n  selectedRoles=[];\n  User_id;\n  mainTech=[];\n  RDomains_List: any[];\n  RJobRoles_List: any[];\n  tech_lists: any[];\n  educations: any[];\n  isDoaminError: boolean;\n  education_list =[];\n  domain_list=[];\n  isJobError: boolean;\n  jobRole_list=[];\n  technology_list=[];\n  techFormGroup: FormGroup;\n  domainFormGroup: FormGroup;\n  jobRoleFormGroup: FormGroup;\n  educationFormGroup: FormGroup;\n  isTechError: boolean;\n  isEduError: boolean;\n  project_stime :Date;\nproject_etime:Date;\n  constructor(  private _Activatedroute:ActivatedRoute,public dialog: MatDialog, private ListingManagerService:ListingManagerService, private ProjectService :ProjectService, private formBuilder: FormBuilder,private Router:Router) { \n    this.Project_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n    this.User_id = sessionStorage.getItem('USER_ID');  \n  }\n\n  Project_name = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Requirement_name = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Week_duration = new FormControl('', [ Validators.required ]);\n  Week_must_time = new FormControl('', [ Validators.required]);\n  Technology_id = new FormControl('');\n  Domain_id = new FormControl('' );\n  Roles_id = new FormControl('' );\n  Certification = new FormControl('' );\n  Hours_per_week = new FormControl('', [ Validators.required ]);\n  Hours_per_month = new FormControl('', [ Validators.required ]);\n  Hours_per_day = new FormControl('', [ Validators.required ]);\n  No_of_resources = new FormControl('', [ Validators.required ]);\n  Requirements_description = new FormControl('', [ Validators.required ]);\n  Technology_name = new FormControl('', [ Validators.required]);\n  Technology_version = new FormControl('', [ Validators.required]);\n  Technology_experience = new FormControl('', [ Validators.required]);\n  Technology_level = new FormControl('EXPERT', [ Validators.required]);\n  Technology_parent = new FormControl('', [ Validators.required]);\n  Domain_name = new FormControl('', [ Validators.required]);\n  Domain_duration = new FormControl('', [ Validators.required]);\n  Job_title = new FormControl('', [ Validators.required]);\n  Job_duration = new FormControl('', [ Validators.required]);\n  Education = new FormControl('', [ Validators.required]);\n  Pass_year = new FormControl('', [ Validators.required]);\n  Start_date = new FormControl('', [ Validators.required]);\n  End_date = new FormControl('', [ Validators.required]);\n\n  ngOnInit(): void {\n    this.findProject(); \n    this.getTechnologyLists();\n    this.getEducationLists();\n    this.getDomainLists();\n    this.getJobRoleLists();\n    this.Requirement_Form = this.formBuilder.group({\n      Project_name : this.Project_name,\n      Requirement_name : this.Requirement_name,\n      Week_duration : this.Week_duration,\n      Week_must_time : this.Week_must_time,\n      Technology_id : this.formBuilder.array([]),\n      Domain_id : this.formBuilder.array([]),\n      Roles_id : this.formBuilder.array([]),\n      Certification : this.formBuilder.array([]),\n      Hours_per_week : this.Hours_per_week,\n      Hours_per_month : this.Hours_per_month,\n      Hours_per_day : this.Hours_per_day,\n      No_of_resources : this.No_of_resources,\n      Requirements_description : this.Requirements_description, \n      Start_date : this.Start_date, \n      End_date : this.End_date,  \n    });\n    this.techFormGroup = this.formBuilder.group({\n      Technology_name : this.Technology_name,  \n      Technology_version : this.Technology_version,  \n      Technology_experience : this.Technology_experience,    \n      Technology_level : this.Technology_level,  \n      Technology_parent:this.Technology_parent\n  \n    });\n    this.domainFormGroup = this.formBuilder.group({\n      Domain_name : this.Domain_name,    \n      Domain_duration : this.Domain_duration,    \n  \n    }); \n    this.jobRoleFormGroup = this.formBuilder.group({\n      Job_title : this.Job_title,    \n      Job_duration : this.Job_duration,        \n  \n    }); \n    this.educationFormGroup = this.formBuilder.group({\n      Education : this.Education,    \n      Pass_year : this.Pass_year,        \n  \n    });\n  }\n   \n \nonSubmit(){\n   \n\n  if (this.Requirement_Form.invalid) {  \n    this.submitted =true; \n    console.log(\"Form error\" + this.Requirement_Form.errors);\n    return;\n  }else{  \n \n    this.ProjectService.createRequirement(this.Requirement_Form.value,this.technology_list,this.domain_list\n      ,this.jobRole_list,this.education_list,this.Project_id).subscribe(data =>{\n          \n         this.Router.navigate(['company/Projectmanagement']);  \n\n    }, error => {\n      console.log(error); \n    });\n  }\n\n}\nfindProject(){\n  this.ProjectService.searchProjectById(this.Project_id).subscribe(data =>{ \n    this.Requirement_Form.controls.Project_name.setValue(data['Project_name']);\n    this.project_stime =data['Start_date'];\n    this.project_etime =data['End_date']; \n\n}, error => {\n  console.log(error); \n});\n} \nget f() { return this.Requirement_Form.controls; }\n\n\n\n\ngetDomainLists(){\n  this.ListingManagerService.getDomainLists().subscribe(data =>{\n     this.RDomains_List=data;\n    \n  \n  }); \n\n}\ngetJobRoleLists(){\n  this.ListingManagerService.getJobRoleLists().subscribe(data =>{\n     this.RJobRoles_List=data; \n  }); \n\n}\ngetTechnologyLists(){\n  this.ListingManagerService.getTechnologyLists().subscribe(data =>{\n     \n    this.tech_lists=data; \n  }); \n\n}\ngetEducationLists(){\n  this.ListingManagerService.getEducationLists().subscribe(data =>{\n      \n    this.educations=data; \n  }); \n\n}\n\neducationChange(e): void { \n  if(e.target.checked){ \n  const dialogRef = this.dialog.open(PopupEducationComponent, {\n    width: '450px',\n    data: {name: e.target.value}, \n    hasBackdrop: true,\n    disableClose : true\n  }); \n  dialogRef.afterClosed().subscribe(result => { \n   this.isDoaminError =false;\n   if(result.Passout_year != 0){\n    let eduData = {\n      Education : e.target.value,\n      Pass_year : result.Passout_year, \n    }\n    this.education_list.push(eduData); \n   }else{\n    e.target.checked =false;\n   }\n  });\n}else{ \n  this.education_list = this.education_list.filter(m=>m.Qualification!==e.target.value);\n } \n}\n \ndomainChange(e): void { \n  if(e.target.checked){ \n  const dialogRef = this.dialog.open(PopupDomainComponent, {\n    width: '450px',\n    data: {name: e.target.value}, \n    hasBackdrop: true,\n    disableClose : true\n  }); \n  dialogRef.afterClosed().subscribe(result => { \n   this.isDoaminError =false;\n   if(result.Experience > 0){\n    let domainData = {\n      Domain : e.target.value,\n      Domain_duration : result.Experience, \n    }\n    this.domain_list.push(domainData);\n    }else{\n    e.target.checked =false;\n   }\n  });\n}else{ \n  this.domain_list = this.domain_list.filter(m=>m.Domain!==e.target.value);\n } \n}\n\nroleChange(e): void { \n  if(e.target.checked){ \n  const dialogRef = this.dialog.open(PopupRoleComponent, {\n    width: '450px',\n    data: {name: e.target.value},\n    hasBackdrop: true,\n    disableClose : true\n  }); \n  dialogRef.afterClosed().subscribe(result => { \n   this.isJobError =false;\n   if(result.Experience > 0){\n    let jobRoleData = {\n     Job_title : e.target.value,\n     Job_duration : result.Experience, \n   }\n   this.jobRole_list.push(jobRoleData); \n    }else{\n    e.target.checked =false;\n   }\n  });\n}else{ \n  this.jobRole_list = this.jobRole_list.filter(m=>m.Job_title!==e.target.value);\n } \n}\n\nPopupTechnology(e){\n\n  \n    const dialogRef = this.dialog.open(PopupTechnologyComponent, {\n      width: '100%',\n      height : 'auto',\n      data: {Technology_name: e} \n    }); \n    dialogRef.afterClosed().subscribe(result => { \n       let techData = {\n        Technology : result.Technology_name,\n        Technology_version : result.Technology_version,\n        Technology_experience : result.Technology_experience,\n        Technology_level : result.Technology_level, \n      }\n      this.technology_list.push(techData); \n    }); \n}\n\naddTechnology(){\n  if(this.techFormGroup.invalid){\n    this.isTechError =true;\n\n  }else{\n    this.isTechError =false;\n  let techData = {\n    Technology : this.techFormGroup.value.Technology_name,\n    Technology_version : this.techFormGroup.value.Technology_version,\n    Technology_experience : this.techFormGroup.value.Technology_experience,\n    Technology_level : this.techFormGroup.value.Technology_level,\n    Technology_parent : this.techFormGroup.value.Technology_parent\n  }\n  this.technology_list.push(techData);\n  this.techFormGroup.reset(); \n}\n}\naddDomain(){\n  if(this.domainFormGroup.invalid){\n  this.isDoaminError =true;\n\n}else{\n  this.isDoaminError =false;\n  let domainData = {\n    Domain : this.domainFormGroup.value.Domain_name,\n    Domain_duration : this.domainFormGroup.value.Domain_duration, \n  }\n  this.domain_list.push(domainData);\n  this.domainFormGroup.reset(); \n}\n}\naddJobTitle(){\n  if(this.jobRoleFormGroup.invalid){\n  this.isJobError =true;\n\n}else{\n  this.isJobError =false;\n  let jobRoleData = {\n    Job_title : this.jobRoleFormGroup.value.Job_title,\n    Job_duration : this.jobRoleFormGroup.value.Job_duration, \n  }\n  this.jobRole_list.push(jobRoleData);\n  this.jobRoleFormGroup.reset(); \n}\n}\naddEducation(){\n  if(this.educationFormGroup.invalid){\n  this.isEduError =true;\n\n}else{\n  this.isEduError =false;\n  let eduData = {\n    Education : this.educationFormGroup.value.Education,\n    Pass_year : this.educationFormGroup.value.Pass_year, \n  }\n  this.education_list.push(eduData);\n  this.educationFormGroup.reset(); \n}\n}\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Add an Assignment</h4> \n       </div> \n       </div> \n\n    <div class=\"card\">\n        <div class=\"card-body\">  \n            <form [formGroup]=\"Requirement_Form\" (ngSubmit)=\"onSubmit()\">\n \n\n                <mat-horizontal-stepper  #stepper>\n                    <mat-step [stepControl]=\"Requirement_Form\" >\n                         <ng-template matStepLabel>Requirement Duration</ng-template>\n\n\n                         <div class=\"row\">\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Project Name<span class=\"redColor\">*</span> </label>\n                                 <input type=\"text\" #pName class=\"form-control form-control-square\" formControlName=\"Project_name\"   id=\"Project_name\" required \n                                 name=\"Project_name\"  placeholder=\"Project Name \" readonly> \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Requirement Name<span class=\"redColor\">*</span> </label>\n                                 <input type=\"text\" #rName class=\"form-control form-control-square\" formControlName=\"Requirement_name\"   id=\"Requirement_name\" required \n                                 name=\"Requirement_name\"  placeholder=\"Requirement Name \"  > \n                                 \n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Number of Resources<span class=\"redColor\">*</span> </label>\n                                 <input type=\"number\" #Nresources class=\"form-control form-control-square\" formControlName=\"No_of_resources\"   id=\"No_of_resources\" required \n                                 name=\"No_of_resources\"  placeholder=\"Number of Resources\"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Estimated Duration (Weeks)<span class=\"redColor\">*</span> </label>\n                                 <input type=\"number\" #eTime class=\"form-control form-control-square\" formControlName=\"Week_duration\"   id=\"Week_duration\" required \n                                 name=\"Week_duration\"  placeholder=\"Week duration\"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Min Guranteed Duration (Weeks)  </label>\n                                 <input type=\"number\" #mgTime class=\"form-control form-control-square\" formControlName=\"Week_must_time\"   id=\"Week_must_time\" required \n                                 name=\"Week_must_time\"  placeholder=\"Mandatory Duration in Weeks\"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Start Date </label>\n                                 <input type=\"date\" #sTime class=\"form-control form-control-square\" \n                                 formControlName=\"Start_date\"   id=\"Start_date\" required \n                                 min=\"{{project_stime}}\" \n                                 max=\"{{project_etime}}\"\n                                 name=\"Start_date\"> \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">End Date </label>\n                                 <input type=\"date\" #eTime class=\"form-control form-control-square\" formControlName=\"End_date\"   id=\"End_date\" required \n                                 name=\"End_date\"  min=\"{{project_stime}}\" max=\"{{project_etime}}\"   > \n                                 \n                                </div>\n                            </div>\n                             \n\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Hour/Month  </label>\n                                 <input type=\"number\" #hmonth class=\"form-control form-control-square\" formControlName=\"Hours_per_month\"   id=\"Hours_per_month\" required \n                                 name=\"Hours_per_month\"  placeholder=\"Hours per month\"   > \n                                 \n                                </div>\n                            </div>\n                                <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Hours/Week </label>\n                                 <input type=\"number\" #hWeek class=\"form-control form-control-square\" formControlName=\"Hours_per_week\"   id=\"Hours_per_week\" required \n                                 name=\"Hours_per_week\"  placeholder=\"Hours per week\" > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Hour/Day  </label>\n                                 <input type=\"number\" #hDay class=\"form-control form-control-square\" formControlName=\"Hours_per_day\"   id=\"Hours_per_day\" required \n                                 name=\"Hours_per_day\"  placeholder=\"Project Name \"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Description<span class=\"redColor\">*</span> </label>\n                                 <textarea #description formControlName=\"Requirements_description\" id=\"Requirements_description\" class=\"form-control form-control-square\" name=\"\" id=\"\" cols=\"30\" rows=\"7\"></textarea>\n                                 \n                                </div>\n                            </div> \n                           </div>   \n                        <div class=\"goRight\">\n                          <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                            <span class=\"fa fa-forward\"></span> </button>\n                        </div> \n                    </mat-step>\n\n\n\n\n                    <mat-step [stepControl]=\"Requirement_Form\"  >\n   \n\n                        <ng-template matStepLabel>Skills</ng-template>\n                        <form [formGroup]=\"techFormGroup\" (ngSubmit)=\"addTechnology()\">\n                         <label for=\"input-11\"> Choose Technology<span class=\"redColor\">*</span></label><br>\n\n                          <div class=\"row\"> \n                             <div class=\"col-sm-12\">\n                               <mat-accordion>\n                                 <div class=\"marg\" *ngFor=\"let techncat of tech_lists; let i=index\">\n                                 <mat-expansion-panel hideToggle>\n                                   <mat-expansion-panel-header>\n                                     <mat-panel-title>\n                                         {{techncat.Technology_category}} \n                                     </mat-panel-title> \n                                   </mat-expansion-panel-header>\n                                     <mat-panel-description>\n                                         <div class=\"row\">\n                                             <div class=\"col-sm-12\">\n                                             <div class=\"Acheckbox icheck-inline\" *ngFor=\"let technology of techncat['TechnologyTbs']; let j=index\">\n                                             <label class=\"container\">   \n                                             <!-- <input type=\"checkbox\"  value =\"{{technology.Technology_name}}\" (change)=\"selectTech($event)\">\n                                               -->\n                                                   <button mat-raised-button   (click)=\"PopupTechnology(technology.Technology_name)\">\n                                                     {{technology.Technology_name}}\n                                                   </button>\n\n                                             </label>\n                                             </div> \n                                             </div> \n                                             </div>\n                                     </mat-panel-description> \n                                 </mat-expansion-panel>\n                                 </div>\n                                 </mat-accordion>\n\n                              \n                         </div> \n                          </div>\n                          <br>\n                          <p>Add custome technology <i>(Approval required by Admin)</i> </p> \n                        <div class=\"row\">\n                         <div class=\"col-sm-3\">\n\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Technology Name<span class=\"redColor\">*</span></label>\n                        <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Technology_name\" id=\"Technology_name\" \n                        name=\"Technology_name\"  placeholder=\"Technology Name\">\n                       </div>\n                         </div>\n                         <div class=\"col-sm-2\">\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Technology Version<span class=\"redColor\">*</span></label>\n                        <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Technology_version\" id=\"Technology_version\" \n                        name=\"Technology_version\"  placeholder=\"Total Experience of the resource\">\n                       </div>\n                         </div>\n                         <div class=\"col-sm-2\">\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Experience(years)<span class=\"redColor\">*</span></label>\n                        <input type=\"number\" class=\"form-control form-control-square\" formControlName=\"Technology_experience\" id=\"Technology_experience\" \n                        name=\"Technology_experience\"  placeholder=\"Total Experience of the resource\">\n                       </div> \n                         </div>\n                         <div class=\"col-sm-4\">\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Expertise Level<span class=\"redColor\">*</span></label><br>\n                        <mat-radio-group aria-label=\"Select an option\" formControlName=\"Technology_level\" id=\"Technology_level\" \n                       name=\"Technology_level\">\n                       <mat-radio-button value=\"BEGGINER\" >BEGINNER</mat-radio-button>&nbsp; \n                       <mat-radio-button value=\"INTERMEDIATE\" >INTERMEDIATE</mat-radio-button>&nbsp;<mat-radio-button value=\"EXPERT\" [checked]=\"true\">EXPERT</mat-radio-button>\n                       </mat-radio-group> \n                       </div> \n                         </div>\n                         <div class=\"col-sm-3\">\n\n                      <div class=\"form-group\">\n                       <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\n                     </div>\n                         </div> \n                         <div class=\"col-sm-12\" id=\"goup\"> \n                           <div class=\"row\">\n                             <div class=\"inlinCol\" *ngFor=\"let technology of technology_list \" > \n                              <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                 <span>{{technology.Technology}} </span>  \n                              </button>\n\n                            </div>\n                           </div> \n                         </div>\n\n                        </div>\n                       </form> \n                        <div class=\"goRight\">\n                         <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                         <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                          <span class=\"fa fa-forward\"></span> </button>\n                        </div>\n\n\n\n\n\n                    </mat-step>\n \n                <mat-step>\n                    <ng-template matStepLabel>Domains</ng-template>\n                    <form [formGroup]=\"domainFormGroup\" (ngSubmit)=\"addDomain()\">  \n                      <div class=\"row\"> \n                         <div class=\"form-group\">\n                           <label for=\"input-11\">Domain Lists<span class=\"redColor\">*</span> </label><br>\n                           <div class=\"Acheckbox icheck-inline col-sm-3\" *ngFor=\"let domain of RDomains_List; let i=index\">\n                              <label class=\"container2 \"> {{domain.Domain}}\n                                  <input type=\"checkbox\"  value =\"{{domain.Domain}}\" (change)=\"domainChange($event)\">\n                                  <span class=\"checkmark\"></span>\n                                  </label>\n                            </div>  \n                          </div> \n                       </div> \n                      <p>Don't find the required domain ? Add custome domain</p>\n\n                    <div class=\"row\"> \n                     <div class=\"col-sm-4\"> \n                       <div class=\"form-group\">\n                         <label for=\"input-11\"> Domain<span class=\"redColor\">*</span></label>\n                         <input type=\"text\" [checked]=\"false\" class=\"form-control form-control-square\" formControlName=\"Domain_name\" id=\"Domain_name\" \n                         name=\"Domain_name\"  placeholder=\"Domain / Sector name\">\n                        </div> \n                          </div> \n                          <div class=\"col-sm-4\"> \n\n                           \n                        <div class=\"form-group\">\n                         <label for=\"input-11\"> Duration<span class=\"redColor\">*</span></label> \n                             <div class=\"input-group\">\n                               <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Domain_duration\" id=\"Domain_duration\" \n                               name=\"Domain_duration\"  placeholder=\"  Duration in years\">                                                      \n                               <div class=\"input-group-append\">\n                                 <span class=\"input-group-text\">\n                                   <button type=\"submit\" mat-raised-button color=\"primary\" >Add</button>\n\n                                 </span>\n                               </div>\n                               </div>\n                            </div> \n\n                               </div>\n                               <div class=\"col-sm-12\"> \n                                 <div class=\"row\">\n                                   <div class=\"inlinCol\" *ngFor=\"let domain of domain_list \" > \n                                    <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                       <span>{{domain.Domain}} </span>  \n                                    </button> \n                                  </div>\n                                 </div> \n                               </div>  \n\n                               <div class=\"col-sm-12\">\n\n                         <div id=\"notSucess\" class=\"{{isDoaminError ? 'successClass' : 'notSucess'}}\">\n                           <div class=\"row\">\n                             <div class=\"col-sm-12\">\n                               <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n                                 <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                                 <div class=\"alert-icon\">\n                                  <i class=\"zmdi zmdi-check-circle\"></i>\n                                 </div>\n                                 <div class=\"alert-message\">\n                                   <span><strong>Error! </strong> Please fill all the data.</span>\n                                 </div>\n                                 </div>\n                             </div>\n                           </div>\n                         </div>\n                         </div>\n                           </div> \n                           </form>\n\n                    <div class=\"goRight\">\n                     <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                     <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                      <span class=\"fa fa-forward\"></span> </button>\n                    </div>\n                </mat-step>\n                    <mat-step>\n                        <ng-template matStepLabel>Education</ng-template>\n\n\n\n                        <form [formGroup]=\"educationFormGroup\" (ngSubmit)=\"addEducation()\">\n                          <div class=\"row\"> \n                            <div class=\"form-group\">\n                              <label for=\"input-11\">Education Lists<span class=\"redColor\">*</span> </label><br>\n                              <div class=\"Acheckbox icheck-inline col-sm-3\" *ngFor=\"let edu of educations; let i=index\">\n                                 <label class=\"container2 \"> {{edu.Qualification}}\n                                     <input type=\"checkbox\"  value =\"{{edu.Qualification}}\" (change)=\"educationChange($event)\">\n                                     <span class=\"checkmark\"></span>\n                                     </label>\n                               </div>  \n                             </div> \n                          </div> \n                          <i>Request an extra Education data</i>\n\n                          <div class=\"row\"> \n                           <div class=\"col-sm-4\"> \n                             <div class=\"form-group\">\n                               <label for=\"input-11\"> Education<span class=\"redColor\">*</span></label>\n                               <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Education\" id=\"Education\" \n                               name=\"Education\"  placeholder=\"Education name\">\n                              </div> \n                                </div> \n                                <div class=\"col-sm-4\"> \n                                  \n                             <div class=\"form-group\">\n                              <label for=\"input-11\"> Completed year<span class=\"redColor\">*</span></label> \n                                  <div class=\"input-group\">\n                                    <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Pass_year\" id=\"Pass_year\" \n                                    name=\"Pass_year\"  placeholder=\"Completed year\">                                                      \n                                    <div class=\"input-group-append\">\n                                      <span class=\"input-group-text\">\n                                        <button type=\"submit\" mat-raised-button color=\"primary\" >Add</button>\n\n                                      </span>\n                                    </div>\n                                    </div>\n                                 </div>\n                                     </div>   \n\n\n                                     <div class=\"col-sm-12\"> \n                                       <div class=\"row\">\n                                         <div class=\"inlinCol\" *ngFor=\"let edu of education_list \" > \n                                          <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                             <span>{{edu.Education}} </span>  \n                                          </button> \n                                        </div>\n                                       </div> \n                                     </div>\n\n                                     <div class=\"col-sm-12\">\n\n                               <div id=\"notSucess\" class=\"{{isEduError ? 'successClass' : 'notSucess'}}\">\n                                 <div class=\"row\">\n                                   <div class=\"col-sm-12\">\n                                     <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n                                       <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                                       <div class=\"alert-icon\">\n                                        <i class=\"zmdi zmdi-check-circle\"></i>\n                                       </div>\n                                       <div class=\"alert-message\">\n                                         <span><strong>Error! </strong> Please fill all the data.</span>\n                                       </div>\n                                       </div>\n                                   </div>\n                                 </div>\n                               </div>\n                               </div>\n                          </div> \n                          </form> \n                        <div class=\"goRight\">\n                          <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                          <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                            <span class=\"fa fa-forward\"></span> </button>\n                        </div>\n                    </mat-step>                 \n                <mat-step>\n                    <ng-template matStepLabel>Experience</ng-template>\n                    <form [formGroup]=\"jobRoleFormGroup\" (ngSubmit)=\"addJobTitle()\">\n                     <div class=\"row\"> \n                       <div class=\"form-group\">\n                         <label for=\"input-11\">Job Role<span class=\"redColor\">*</span> </label><br>\n                         <div class=\"Acheckbox icheck-inline col-sm-3\" *ngFor=\"let role of RJobRoles_List; let i=index\">\n                            <label class=\"container2 \"> {{role.Role_name}}\n                                <input type=\"checkbox\" [checked]=\"false\" value =\"{{role.Role_name}}\" (change)=\"roleChange($event)\">\n                                <span class=\"checkmark\"></span>\n                                </label>\n                          </div>  \n                        </div> \n                     </div> \n                     <p>Don't find the required Title ? Add custome Title</p>\n\n                    <div class=\"row\"> \n                     <div class=\"col-sm-4\"> \n                       <div class=\"form-group\">\n                         <label for=\"input-11\"> Job / Title<span class=\"redColor\">*</span></label>\n                         <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Job_title\" id=\"Job_title\" \n                         name=\"Job_title\"  placeholder=\"Job title\">\n                        </div> \n                          </div> \n                          <div class=\"col-sm-4\"> \n\n                        <div class=\"form-group\">\n                         <label for=\"input-11\"> Duration<span class=\"redColor\">*</span></label> \n                             <div class=\"input-group\">\n                               <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Job_duration\" id=\"Job_duration\" \n                               name=\"Job_duration\"  placeholder=\"Job Duration in years\">                                                      \n                               <div class=\"input-group-append\">\n                                 <span class=\"input-group-text\">\n                                   <button type=\"submit\" mat-raised-button color=\"primary\" >Add</button>\n\n                                 </span>\n                               </div>\n                               </div>\n                            </div> \n                               </div> \n                               <div class=\"col-sm-12\"> \n                                 <div class=\"row\">\n                                   <div class=\"inlinCol\" *ngFor=\"let job of jobRole_list \" > \n                                    <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                       <span>{{job.Job_title}} </span>  \n                                    </button> \n                                  </div>\n                                 </div> \n                               </div> \n\n                               <div class=\"col-sm-12\">\n\n                         <div id=\"notSucess\" class=\"{{isJobError ? 'successClass' : 'notSucess'}}\">\n                           <div class=\"row\">\n                             <div class=\"col-sm-12\">\n                               <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n                                 <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                                 <div class=\"alert-icon\">\n                                  <i class=\"zmdi zmdi-check-circle\"></i>\n                                 </div>\n                                 <div class=\"alert-message\">\n                                   <span><strong>Error! </strong> Please fill all the data.</span>\n                                 </div>\n                                 </div>\n                             </div>\n                           </div>\n                         </div>\n                         </div>\n                    </div> \n                    </form>\n\n                    <div class=\"goRight\">\n                     <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                     <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                      <span class=\"fa fa-forward\"></span> </button>\n                    </div>\n                </mat-step>\n\n                    <mat-step>\n                        <ng-template matStepLabel>Review</ng-template>\n\n                        <div class=\"row\">\n                          <div class=\"col-sm-4\">\n                           <p class=\"reviewP\"> Project Name : {{pName.value}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  Requirement Name : {{rName.value}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  No Of Resources : {{Nresources.value}}</p>\n                          </div>\n                        </div> \n                        \n                          \n                        \n                        <div class=\"row\">\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  Estimated Duration : {{eTime.value+'Weeks'}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  Min Guranteed Duration : {{mgTime.value+'Weeks'}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\"> Hour/Month : {{hmonth.value+'Hours'}}</p>\n                          </div> \n                        </div>  \n                        <div class=\"row\">\n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">Start Date : {{sTime.value}}</p>\n                          </div> \n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">End Date : {{eTime.value}}</p>\n                          </div> \n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">Hours/Week : {{hWeek.value+'Hours'}}</p>\n                          </div> \n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">Hour/Day : {{hDay.value+'Hours'}}</p>\n                          </div> \n                        </div>  \n                        <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                            <p class=\"reviewP\"> Description</p>\n                            <p class=\"reviewP\">{{description.value}}</p>\n                          </div>\n                          \n                        </div>\n\n  \n                    \n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-button (click)=\"stepper.reset()\">Reset</button>\n                          <button  mat-raised-button color=\"primary\" type=\"submit\">Agree and proceed <span class=\"fa fa-share\"></span></button>\n                       </mat-step>\n                  </mat-horizontal-stepper>\n \n \n </form> \n       </div>\n       </div>\n\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { ViewChild } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\nprojects=[];\nn =1;\n\ntoday = moment().format('YYYY-MM-DD'); \n@ViewChild(MatSort) sort: MatSort; \n@ViewChild(MatPaginator) paginator: MatPaginator;\ndataSource = new MatTableDataSource();\n\ndisplayedColumns: string[] = ['No','Status','Project_name', 'Start_date', \n'End_date','Remaining','Project_location','Action'];\n\nngAfterViewInit() { \n  this.dataSource.sort = this.sort;\n  this.dataSource.paginator = this.paginator;\n\n} \n\n  constructor(private ProjectService :ProjectService , private Router:Router) { }\n\n  ngOnInit(): void {\n    this.ProjectService.getProjects().subscribe(data =>{\n      console.log(data);\n        this.projects = data;\n        this.dataSource.data=data;\n  }, error => {\n    console.log(error); \n  });\n  }\n  createAssignment(Project_id){\n     this.Router.navigate(['/company/Projectmanagement/Createassignment',Project_id]); \n \n  }\n  gotoAssignment(Project_id){\n     this.Router.navigate(['/company/Projectmanagement/Requirements',Project_id]); \n \n  }\n  gotoProject(Project_id){\n    this.Router.navigate(['/company/Projectmanagement/ProjectDetails',Project_id]); \n\n  }\n  toogleActive(Project_id , currentValue){\n    if(currentValue == 1){\n      currentValue =0;\n    }else{ \n     currentValue =1;\n \n    }\n   this.ProjectService.toogleActive(Project_id,currentValue).subscribe(data =>{\n     console.log(data);   \n     this.ngOnInit();\n   \n   });\n  }\n\n  updateStart(e,Project_id){\n    let fromDate = e.value;\n    fromDate =  moment(fromDate).format('YYYY-MM-DD');\n    console.log(fromDate);\n    this.ProjectService.updateStart(fromDate,Project_id).subscribe(data =>{\n      console.log(data); \n      this.ngOnInit();  \n   \n    });\n\n  }\n  updateEnd(e,Project_id){\n    let toDate = e.value;\n    toDate =  moment(toDate).format('YYYY-MM-DD');\n    console.log(toDate);\n    this.ProjectService.updateEnd(toDate,Project_id).subscribe(data =>{\n      console.log(data);  \n      this.ngOnInit(); \n   \n    });\n  }\n\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Project Lists</h4> \n       </div> \n       <div class=\"col-sm-6\">\n       <div class=\"right\">\n           <button type=\"button\" class=\"btn btn-primary m-1\" [routerLink]=\"['/company/Projectmanagement/Createproject']\" >Create New <span class=\"fa fa-plus\"></span> </button>\n       </div>\n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">    \n    <div class=\"row\"> \n            <div class=\"col-sm-12\">\n\n\n                <div class=\"table-responsive\">\n                    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n                        <!-- Position Column -->\n                        <ng-container matColumnDef=\"No\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n                          <td mat-cell *matCellDef=\"let element;let i = index;\"> {{i + 1}} </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Status\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                          <td mat-cell *matCellDef=\"let element\">   \n                            <mat-slide-toggle color='primary' [checked]=\"element.Status==1\" (click)=toogleActive(element.Project_id,element.Status)>\n                                <span *ngIf=\"element.Status==1\">Active</span> \n                                <span *ngIf=\"element.Status==0\">Inactive</span>\n                              </mat-slide-toggle>\n                          </td>\n                        </ng-container>\n                      \n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"Project_name\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.Project_name}} &nbsp;</td>\n                        </ng-container>\n                      \n                        <!-- Weight Column -->\n                        <ng-container matColumnDef=\"Project_location\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Location </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.Project_location}} </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Start_date\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Start date </th>\n                          <td mat-cell *matCellDef=\"let element\">  \n                            <mat-form-field appearance=\"legacy\" class=\"dateWidth\">\n                                <mat-label>{{element.Start_date}}</mat-label>\n                                <input matInput [matDatepicker]=\"picker\" [min]=\"today\" disabled (dateChange)=\"updateStart($event,element.Project_id)\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker disabled=\"false\" ></mat-datepicker>\n                              </mat-form-field>\n                          </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"End_date\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> End date </th>\n                          <td mat-cell *matCellDef=\"let element\">  \n                            <mat-form-field appearance=\"legacy\" class=\"dateWidth\">\n                                <mat-label>{{element.End_date}}</mat-label>\n                                <input matInput [matDatepicker]=\"picker\" [min]=\"today\" disabled (dateChange)=\"updateEnd($event,element.Project_id)\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker disabled=\"false\" ></mat-datepicker>\n                              </mat-form-field>\n\n                          </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Remaining\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Remaining </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.Remaining + 'Days'}} </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Action\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                          <td mat-cell *matCellDef=\"let element\">  \n                            <button mat-flat-button (click)=\"gotoProject(element.Project_id)\">\n                               <span class=\"fa fa-folder-open-o\"></span>  Details  \n                          </button>\n                          <button mat-flat-button (click)=\"gotoAssignment(element.Project_id)\">\n                            <span class=\"fa fa-newspaper-o\"></span>  Assignments\n                        </button>\n \n                          </td>\n                        </ng-container>\n                      \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                      </table>\n                      \n                      </div> \n\n        </div>\n    </div>\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-view-projects',\n  templateUrl: './view-projects.component.html',\n  styleUrls: ['./view-projects.component.css']\n})\nexport class ViewProjectsComponent implements OnInit {\n\n  Project_id;\n  assignmentLists=[];\n  project_data=[];\n  constructor(  private _Activatedroute:ActivatedRoute,private ProjectService :ProjectService, private formBuilder: FormBuilder,) { \n    this.Project_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n   \n  }\n  ngOnInit(): void {\n    this.getProjectData();\n    this.getAssignments();\n  }\n  getProjectData(){\nthis.ProjectService.getProjectById(this.Project_id).subscribe(data =>{\n  this.project_data['projectName'] = data['Project_name'];\n  this.project_data['Description'] = data['Description'];\n  this.project_data['Start_date'] = data['Start_date'];\n  this.project_data['End_date'] = data['End_date']; \n  this.project_data['Description'] = data['Description']; \n  this.project_data['Need_remote'] = data['Need_remote']; \n  this.project_data['Project_location'] = data['Project_location']; \n   console.log(data);\n});\n  }\n  getAssignments(){\n    this.ProjectService.getAssignmentsById(this.Project_id).subscribe(data =>{\n       \n      console.log(\"----\");\n      this.assignmentLists = data;\n      console.log(data);\n    });\n  }\n\n}\n","<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Project Details</h4> \n       </div> \n       </div> \n\n       <div class=\"card\">\n        <div class=\"card-body\">  \n       <div class=\"row\"> \n        <div class=\"col-sm-12\">\n            <div> \n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <h5>{{project_data['projectName']}} <i class=\"fa fa-edit\"></i> </h5>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"floright\">\n                            <p>Duration : {{project_data['Start_date']}} : {{project_data['End_date'] }} <i class=\"fa fa-bars\"></i> </p>\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                             \n                        <p><b>Description :</b></p>\n                        <p>{{project_data['Description']}}</p>\n                        <hr>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <p><b>Remote Availability : </b>{{project_data['Need_remote']}}</p>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <p><b>Project Location : </b>{{project_data['Project_location']}}</p>\n                        </div>\n                    </div>\n \n                <h5>Available Requirements</h5>\n                <div class=\"divid\" *ngFor=\"let item of assignmentLists\">\n                   * <a [routerLink]=\"[ '/path', routeParam ]\">{{item.Requirement_name}}</a>\n\n                    \n\n                </div>\n        </div>\n\n \n   \n        </div>\n        </div>\n\n    </div>\n</div>\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>"],"sourceRoot":"webpack:///"}