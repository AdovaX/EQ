{"version":3,"sources":["./src/app/company/project-managment/my-resources/my-resources.component.ts","./src/app/company/project-managment/my-resources/my-resources.component.html","./src/app/company/project-managment/project-managment-routing.module.ts","./src/app/company/project-managment/project-managment.module.ts","./src/app/company/project-managment/interviewing-resources-lists/interviewing-resources-lists.component.ts","./src/app/company/project-managment/interviewing-resources-lists/interviewing-resources-lists.component.html","./src/app/company/project-managment/create-project/create-project.component.ts","./src/app/company/project-managment/create-project/create-project.component.html","./src/app/company/project-managment/popup-interview-date/popup-interview-date.component.ts","./src/app/company/project-managment/popup-interview-date/popup-interview-date.component.html","./src/app/company/project-managment/view-assignments/view-assignments.component.ts","./src/app/company/project-managment/view-assignments/view-assignments.component.html","./src/app/company/project-managment/find-maching/find-maching.component.ts","./src/app/company/project-managment/find-maching/find-maching.component.html","./src/app/company/project-managment/approved-resources/approved-resources.component.ts","./src/app/company/project-managment/approved-resources/approved-resources.component.html","./src/app/company/project-managment/bookmarks/bookmarks.component.ts","./src/app/company/project-managment/bookmarks/bookmarks.component.html","./src/app/company/project-managment/requests/requests.component.ts","./src/app/company/project-managment/requests/requests.component.html","./node_modules/@tinymce/tinymce-angular/__ivy_ngcc__/fesm2015/tinymce-tinymce-angular.js","./src/app/company/project-managment/interview-shedule/interview-shedule.component.ts","./src/app/company/project-managment/interview-shedule/interview-shedule.component.html","./src/app/company/project-managment/create-assignments/create-assignments.component.ts","./src/app/company/project-managment/create-assignments/create-assignments.component.html","./src/app/company/project-managment/projects/projects.component.ts","./src/app/company/project-managment/projects/projects.component.html","./src/app/company/project-managment/view-projects/view-projects.component.ts","./src/app/company/project-managment/view-projects/view-projects.component.html"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,gBAAgB;AAC7G,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,4DAAc;AAC7C;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,eAAe,iBAAiB;AACtF;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kBAAkB;AACnE,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA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","file":"project-managment-project-managment-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-resources',\n  templateUrl: './my-resources.component.html',\n  styleUrls: ['./my-resources.component.css']\n})\nexport class MyResourcesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\">My Resources </h4> \n       </div> \n       <div class=\"col-sm-6\">\n       \n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">     \n \n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { CreateProjectComponent } from './create-project/create-project.component'; \nimport { CreateAssignmentsComponent } from './create-assignments/create-assignments.component';\nimport { ViewAssignmentsComponent } from './view-assignments/view-assignments.component';\nimport { ViewProjectsComponent } from './view-projects/view-projects.component';\nimport { FindMachingComponent } from './find-maching/find-maching.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { InterviewSheduleComponent } from './interview-shedule/interview-shedule.component';\nimport { InterviewingResourcesListsComponent } from './interviewing-resources-lists/interviewing-resources-lists.component';\nimport { MyResourcesComponent } from './my-resources/my-resources.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { ApprovedResourcesComponent } from './approved-resources/approved-resources.component';\n\nconst routes: Routes = [\n  {path : '' , component:ProjectsComponent},\n  {path : 'Projectmanagement' , component:ProjectsComponent},\n  {path : 'Createproject' , component:CreateProjectComponent},\n  {path : 'Createassignment/:id' , component:CreateAssignmentsComponent},\n  {path : 'Requirements/:id' , component:ViewAssignmentsComponent},\n  {path : 'ProjectDetails/:id' , component:ViewProjectsComponent},\n  {path : 'Findmaching/:id' , component:FindMachingComponent},\n  {path : 'Bookmarks' , component:BookmarksComponent},\n  {path : 'InterviewShedule' , component:InterviewSheduleComponent},\n  {path : 'Interviewing' , component:InterviewingResourcesListsComponent},\n  {path : 'MyResources' , component:MyResourcesComponent},\n  {path : 'Requests' , component:RequestsComponent},\n  {path : 'ApprovedResources' , component:ApprovedResourcesComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectManagmentRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule} from '@angular/forms' \nimport { FormsModule } from '@angular/forms';\n\nimport { ProjectManagmentRoutingModule } from './project-managment-routing.module';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { CreateProjectComponent } from './create-project/create-project.component'; \nimport {   MatInputModule } from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport {SharedModuleModule} from '../../shared-module/shared-module.module';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { CreateAssignmentsComponent } from './create-assignments/create-assignments.component';\nimport { ViewAssignmentsComponent } from './view-assignments/view-assignments.component';\nimport { ViewProjectsComponent } from './view-projects/view-projects.component';\nimport { FindMachingComponent } from './find-maching/find-maching.component';\nimport {MatTableModule} from '@angular/material/table'; \nimport { MatSortModule } from '@angular/material/sort'; \nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport {PopupInterviewDateComponent} from './popup-interview-date/popup-interview-date.component';\nimport { InterviewSheduleComponent } from './interview-shedule/interview-shedule.component';\nimport { EditorModule } from \"@tinymce/tinymce-angular\";\nimport { InterviewingResourcesListsComponent } from './interviewing-resources-lists/interviewing-resources-lists.component';\nimport { MyResourcesComponent } from './my-resources/my-resources.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { ApprovedResourcesComponent } from './approved-resources/approved-resources.component';\n\n@NgModule({\n  declarations: [ProjectsComponent, CreateProjectComponent, CreateAssignmentsComponent, ViewAssignmentsComponent, ViewProjectsComponent, FindMachingComponent, \n    BookmarksComponent,PopupInterviewDateComponent, InterviewSheduleComponent, InterviewingResourcesListsComponent, MyResourcesComponent, RequestsComponent, ApprovedResourcesComponent],\n  imports: [\n    CommonModule,\n    ProjectManagmentRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModuleModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatStepperModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatMenuModule,\n    MatInputModule,MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatSortModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatPaginatorModule,\n    MatTooltipModule, \n    EditorModule,\n    NgCircleProgressModule.forRoot({\n      // set defaults here\n      \"backgroundPadding\": 5,\n      \"radius\": 14,\n      \"space\": -10,\n      \"toFixed\": 0,\n      \"maxPercent\": 1000,\n      \"outerStrokeGradient\": false,\n      \"outerStrokeWidth\": 4, \n      \"innerStrokeColor\": \"#fff\",\n      \"innerStrokeWidth\": 4, \n      \"titleFontSize\": \"14\",\n      \"imageHeight\": 116,\n      \"animationDuration\": 300,\n      \"showUnits\": false,\n      \"showBackground\": false,\n      \"showSubtitle\":false,\n      \"lazy\": true\n    })\n  ]\n})\nexport class ProjectManagmentModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport { MatSort } from '@angular/material/sort'; \n\nimport { MatTableDataSource } from '@angular/material/table'; \n\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-interviewing-resources-lists',\n  templateUrl: './interviewing-resources-lists.component.html',\n  styleUrls: ['./interviewing-resources-lists.component.css']\n})\nexport class InterviewingResourcesListsComponent implements OnInit {\n  User_id=\"\"; \n  updateUserForm: FormGroup; \n  Interview_status=[{\n    value:'PASSED',viewValue:'PASSED'\n  },\n  {\n    value : 'FAILLED',viewValue:'FAILLED'\n  },\n  {\n    value : 'PENDING',viewValue:'PENDING'\n  },\n  {\n    value : 'SHORTLIST',viewValue:'SHORTLIST'\n  },\n  {\n    value : 'CANCEL',viewValue:'CANCEL'\n  }];\n\n  displayedColumns: string[] = ['No','Resource_name','Resource_Designation','Interview_date','Interview_time','Interview_status','Action'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n\n  }  \n  constructor(private formBuilder: FormBuilder,private ProjectService:ProjectService) { \n\n    this.User_id = sessionStorage.getItem('USER_ID');\n  }\n \n\n  ngOnInit(): void {\n    \n    this.getInterviewResources();\n  }\n  getInterviewResources(){\n    this.ProjectService.getInterviewResources().subscribe(data =>{\n      console.log(data); \n      this.dataSource.data = data;   \n    \n    });\n  }\n  interviewStatus(e,resource_id,requirement_id){\n    console.log(e.value);\n    this.ProjectService.changeInterviewStatus(e.value,resource_id,requirement_id).subscribe(data =>{\n      console.log(data);  \n      this.getInterviewResources(); \n    });\n  }\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\">Resources for Interview </h4> \n       </div> \n       <div class=\"col-sm-6\">\n       \n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">    \n            <div class=\"table-responsive\"  > \n\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" >\n                                                 \n \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> No </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{i+1}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Resource_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.ResourceTb.Resource_name}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Resource_Designation\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Designation </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.ResourceTb.Resource_Designation}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Interview_date\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Interview Date </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.Interview_date}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Interview_time\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Interview Time </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.Interview_time}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Interview_status\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Interview Status </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"  > \n                            <!-- {{element.Interview_status}}  -->\n                            <mat-form-field appearance=\"legacy\"> \n                                <mat-select [value]=\"element.Interview_status\" id=\"Interview\" name=\"Interview\" (selectionChange)=\"interviewStatus($event,element.Resource_id,element.Requirement_id)\">\n                                  <mat-option *ngFor=\"let item of Interview_status\" [value]='item.value' >\n                                      {{item.viewValue}}\n                                    </mat-option> \n                                </mat-select>\n                              </mat-form-field>\n                        </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Action\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action</th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\">  \n                            <button mat-icon-button color=\"primary\" matTooltip=\"Edit interview\" class=\"actionBtns\"> <span class=\"fa fa-edit\"></span>\n                            </button> \n                            <button mat-icon-button color=\"primary\" matTooltip=\"Send remainder\" class=\"actionBtns\"> <span class=\"fa fa-bell\"></span>\n                            </button>\n                            <button mat-icon-button color=\"warn\" matTooltip=\"Cancel Interview\" class=\"actionBtns\"> <span class=\"fa fa-close\"></span>\n                            </button>\n                        </td>\n                      </ng-container> \n  \n \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50,100]\" showFirstLastButtons></mat-paginator>\n </div>\n \n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\"\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.css']\n})\nexport class CreateProjectComponent implements OnInit {\n  Project_Form: FormGroup; \n  submitted = false; \n\n  today = moment().format('YYYY-MM-DD'); \n  constructor(private ProjectService :ProjectService, private formBuilder: FormBuilder,private router:Router) { }\n\n  Project_name = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Project_location = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Start_date = new FormControl('', [ Validators.required ]);\n  End_date = new FormControl('', [ Validators.required]);\n  Description = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Status = new FormControl('1', [ Validators.required ]);\n  Need_remote = new FormControl('YES', [ Validators.required ]);\n\n  ngOnInit(): void {\n    this.Project_Form = this.formBuilder.group({\n      Project_name : this.Project_name,\n      Project_location : this.Project_location,\n      Start_date : this.Start_date,\n      End_date : this.End_date,\n      Description : this.Description,\n      Status : this.Status,\n      Need_remote : this.Need_remote\n    });\n  }\nonSubmit(){\n  console.log(this.Project_Form.value);\n  if (this.Project_Form.invalid) {  \n    this.submitted =true;\n    return;\n  }else{\n    this.ProjectService.createProject(this.Project_Form.value).subscribe(data =>{\n        if(data['Project_id']>0){\n          this.router.navigate(['company/Projectmanagement']); \n\n        } \n    }, error => {\n      console.log(error); \n    });\n  }\n\n}\nget f() { return this.Project_Form.controls; }\n\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Create New Project </h4> \n       </div> \n       </div> \n\n    <div class=\"card\">\n        <div class=\"card-body\">  \n            <form [formGroup]=\"Project_Form\" (ngSubmit)=\"onSubmit()\">\n\n       <div class=\"row\">\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Project Name<span class=\"redColor\">*</span> </label>\n             <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Project_name\"   id=\"Project_name\" required \n             name=\"Project_name\"  placeholder=\"Project Name \" > \n             <div *ngIf=\"submitted && f.Project_name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Project_name.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Location<span class=\"redColor\">*</span>  </label>\n             <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Project_location\"  id=\"Project_location\" required\n             name=\"Project_location\"  placeholder=\"Location \" > \n             <div *ngIf=\"submitted && f.Project_location.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Project_location.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Start Date<span class=\"redColor\">*</span> </label>\n             <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Start_date\"  id=\"Start_date\" required\n             name=\"Start_date\"  placeholder=\"Start Date  \" > \n             <div *ngIf=\"submitted && f.Start_date.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Start_date.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">End Date<span class=\"redColor\">*</span>  </label>\n             <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"End_date\"  id=\"End_date\" required\n             name=\"End_date\"  placeholder=\"End_date\" > \n             <div *ngIf=\"submitted && f.End_date.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.End_date.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Remote Availability<span class=\"redColor\">*</span> </label> <br>\n             <mat-radio-group aria-label=\"Select an option\" formControlName=\"Need_remote\" name=\"Need_remote\">\n                <mat-radio-button value=\"YES\"  > Yes</mat-radio-button> &nbsp;\n                <mat-radio-button value=\"NO\">NO</mat-radio-button>\n              </mat-radio-group>\n            </div>\n        </div>\n\n        <div class=\"col-sm-4\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Project status<span class=\"redColor\">*</span> </label> <br>\n             <mat-radio-group aria-label=\"Select an option\" formControlName=\"Status\" name=\"Status\">\n                <mat-radio-button value=\"1\"  > Active</mat-radio-button>&nbsp;\n                <mat-radio-button value=\"0\">InActive</mat-radio-button>\n              </mat-radio-group>\n            </div>\n        </div>\n\n        <div class=\"col-sm-12\"> \n            <div class=\"form-group\">\n             <label for=\"input-11\">Project Description<span class=\"redColor\">*</span> </label>\n             <textarea class=\"form-control form-control-square\" placeholder=\"Briefly describe your project\" rows=\"8\" formControlName=\"Description\" name=\"Description\" required></textarea>\n             <div *ngIf=\"submitted && f.Description.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.Description.errors.required\">Name is a required field.</div> \n              </div> \n            </div>\n        </div>  \n       </div>\n       <div class=\"row\"> \n        <div class=\"col-sm-12\">\n        <div class=\"right\">\n            <button type=\"submit\" class=\"btn btn-primary m-1\"   >\n                Proceed <span class=\"fa fa-share\"></span> </button>\n        </div>\n    </div>\n</div>\n </form>\n\n       </div>\n       </div>\n\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Inject} from '@angular/core';\nimport { FindMachingComponent } from '../find-maching/find-maching.component';\n\nexport interface DialogData {\n  name: string;\n}\n@Component({\n  selector: 'app-popup-interview-date',\n  templateUrl: './popup-interview-date.component.html',\n  styleUrls: ['./popup-interview-date.component.css']\n})\nexport class PopupInterviewDateComponent implements OnInit {\n  value =0;\n   constructor(\n     public dialogRef: MatDialogRef<FindMachingComponent>,\n     @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n \n   ngOnInit(): void {\n   }\n   onNoClick(): void {\n      \n     this.dialogRef.close({ \"Domain\" :this.data.name, \"Experience\" : 0 });\n   }\n   proceed(): void {\n  \n     this.dialogRef.close({ \"Domain\" :this.data.name, \"Experience\" : this.value });\n   }\n   getData(e){\n     this.value = e.target.value;\n   }\n \n   \n }\n ","<div class=\"row\"> \n    <div class=\"col-sm-12\"> \n        <div class=\"form-group\">\n          <label for=\"input-11\">Interview Shedule   <span class=\"redColor\">*</span></label> <br>\n\n<div class=\"row\">\n    <div class=\"col-sm-6\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Interview Date</mat-label>\n          <input matInput [matDatepicker]=\"dp3\" disabled>\n          <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n\n    </div>\n    <div class=\"col-sm-6\">\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Interview Time</mat-label>\n            <input type=\"time\" matInput  >\n          </mat-form-field>\n    </div>\n</div>\n\n\n         </div> \n          \n            <button mat-raised-button color=\"primary\"   (click)=\"onNoClick()\">Cancel</button>&nbsp;\n            <button mat-raised-button color=\"primary\"   (click)=\"proceed()\">Proceed</button>\n        \n           </div>\n </div>\n <div class=\"row\">\n     <div class=\"col-sm-12\">\n         \n     </div>\n </div>","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { MatSort } from '@angular/material/sort'; \nimport { MatTableDataSource } from '@angular/material/table'; \nimport {MatPaginator} from '@angular/material/paginator'; \nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-view-assignments',\n  templateUrl: './view-assignments.component.html',\n  styleUrls: ['./view-assignments.component.css']\n})\nexport class ViewAssignmentsComponent implements OnInit {\n  Project_id;\n  assignmentLists=[];\n  projectName =\"\";\n  today = moment().format('YYYY-MM-DD'); \n  @ViewChild(MatSort) sort: MatSort; \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource = new MatTableDataSource();\n  displayedColumns: string[] = ['No','Requirement_name','No_of_resources','Hours_per_day','Hours_per_week','Hours_per_month','Action'];\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  \n  } \n  constructor(  private _Activatedroute:ActivatedRoute,private Router:Router, private ProjectService :ProjectService, private formBuilder: FormBuilder,private router:Router) { \n    this.Project_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n   \n  }\n\n  ngOnInit(): void {\n  this.getAssignments();\n  this.getProjectById();\n  }\n  getAssignments(){\n  this.ProjectService.getAssignmentsById(this.Project_id).subscribe(data =>{ \n    this.assignmentLists = data;\n    this.dataSource.data=data; \n  }, error => {\n  console.log(error); \n  });\n  }\n  getProjectById(){\n  this.ProjectService.getProjectById(this.Project_id).subscribe(data =>{ \n    this.projectName=data['Project_name'];\n  }, error => {\n  console.log(error); \n  this.ngOnInit();\n  });\n  }\ncreateAssignment(){\n  this.Router.navigate(['/company/Projectmanagement/Createassignment',this.Project_id]); \n\n}\nfindMatching(id){ \n\n  this.router.navigate(['company/Projectmanagement/Findmaching',id]); \n\n}\n}\n","<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Assignment Lists</h4> \n       </div> \n       <div class=\"col-sm-6\">\n        <div class=\"right\">\n        <button type=\"button\" class=\"btn btn-primary m-1\" (click)=\"createAssignment()\" >\n            Create New <span class=\"fa fa-plus\"></span> </button>\n    </div> \n    </div>\n       </div> \n\n       <div class=\"card\">\n        <div class=\"card-body\">  \n            <p class=\"pTitle\"> PROJECT : {{projectName}} </p>\n       <div class=\"row\"> \n        <div class=\"col-sm-12\">\n\n\n            <div class=\"table-responsive\">\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n                      <td mat-cell *matCellDef=\"let element;let i = index;\"> {{i + 1}} </td>\n                    </ng-container>\n                   \n                  \n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"Requirement_name\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Requirement </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Requirement_name}} &nbsp;</td>\n                    </ng-container>\n                   \n                    <ng-container matColumnDef=\"No_of_resources\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Resources </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.No_of_resources}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Hours_per_day\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Hours/day </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Hours_per_day}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Hours_per_week\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Hours/week </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Hours_per_week}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Hours_per_month\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Hours/month </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Hours_per_month}} </td>\n                    </ng-container> \n                   \n                    <ng-container matColumnDef=\"Action\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                      <td mat-cell *matCellDef=\"let element\"> \n                        <button mat-button color=\"primary\" (click)=\"findMatching(element.Requirement_id)\">Find matching <span class=\"fa fa-users\"></span> </button>\n\n                    </td>\n                    </ng-container> \n                    \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr> \n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50 , 100]\" showFirstLastButtons></mat-paginator>\n                  </div> \n                  </div>\n                  </div>\n\n    </div>\n</div>\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router,NavigationExtras } from \"@angular/router\";\nimport { MatSort } from '@angular/material/sort'; \nimport { MatTableDataSource } from '@angular/material/table'; \nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatDialog,MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { PopupInterviewDateComponent } from '../popup-interview-date/popup-interview-date.component';\n\n@Component({\n  selector: 'app-find-maching',\n  templateUrl: './find-maching.component.html',\n  styleUrls: ['./find-maching.component.css']\n})\nexport class FindMachingComponent implements OnInit {\n  Requirement_id;\n  Resource_list=[];\n  noResource = false;\n\n  displayedColumns: string[] = ['No','Matching','Resource_name','Resource_rate','Available_from','Available_to','Status','Action'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n\n  } \n  constructor(private _Activatedroute:ActivatedRoute,private router: Router,private ProjectService :ProjectService,private snackBar: MatSnackBar,public dialog: MatDialog) { \n    this.Requirement_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n\n  }\n openSnackBar(message: string, action: string='') {\n      this.snackBar.open(message, action, {\n         duration: 1500,\n      });\n   }\n  ngOnInit(): void {\n\n    this.getMatchingProfiles();\n   \n  }\n  getMatchingProfiles(){\n    this.ProjectService.machingResources(this.Requirement_id).subscribe(data =>{\n    console.log(data);\n      \n    if(data.status == false){ \n      console.log(\"No resources\");\n      this.noResource =true;\n    }else{\n      this.noResource =false;\n      console.log(\"Resources found\" + Object.keys(data).length);\n      this.Resource_list =data;\n      this.dataSource =data;\n    }\n    \n}, error => {\n  console.log(error); \n});\n  }\n  addBookmark(Resource_id){ \n    this.ProjectService.addBookmark(this.Requirement_id,Resource_id).subscribe(data =>{\n       if(data['Bookmark_id']){\n        this.openSnackBar('Bookmark added')\n\n      }else{\n        console.log('exits');\n      }\n  }, error => {\n    console.log(error); \n  }); \n  }\n  setInterview(Resource_id,Resource_names){\n\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n          name: Resource_names,\n          code: Resource_id,\n          r_id:this.Requirement_id\n      }\n  }\n  this.router.navigate(['company/Projectmanagement/InterviewShedule'], navigationExtras);\n\n  }\n  // setInterview(Resource_id){ \n  //   const dialogRef = this.dialog.open(PopupInterviewDateComponent, { \n  //     data: {name: Resource_id}, \n  //     hasBackdrop: true,\n  //     disableClose : true\n  //   }); \n  //   dialogRef.afterClosed().subscribe(result => { \n  //     console.log(result);\n  //   });\n  // }\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Matching Resources</h4> \n       </div> \n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">     \n           \n            <div class=\"table-responsive\">\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" >\n                                                 \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> No </th>\n                      <td mat-cell *matCellDef=\"let element;let i =index;\"> \n                        <circle-progress\n                        [percent]=\"element.Matching\" \n                        [title] =\"i+1\" \n                        [outerStrokeColor]=\"(element.Matching > 75)? 'Green' : (element.Matching >50) ? 'Orange' : 'Red'\"\n                         >\n                    </circle-progress>\n                          \n                      </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Matching\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Matching </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Matching+'%'}} </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Resource_name\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Resource_name}} </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Resource_rate\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Rate </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Resource_rate}} </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Available_from\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Available_from </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Available_from}} </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Available_to\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Available_to </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Available_to}} </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Status\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Resource_status}} </td>\n                    </ng-container> \n\n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"Action\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                      <td mat-cell *matCellDef=\"let element\"> \n                        <button mat-icon-button color=\"primary\" class=\"actionBtns\" matTooltip=\"Set interview\" (click)=\"setInterview(element.Resource_id,element.Resource_name)\">\n                          <span class=\"fa fa-hand-peace-o\"> </span>   \n                        </button> &nbsp;\n                        <button mat-icon-button color=\"primary\" class=\"actionBtns\" matTooltip=\"Add Bookmark\" (click)=addBookmark(element.Resource_id)>\n                          <span class=\"fa fa-bookmark-o\"> </span>   \n                        </button>  &nbsp;\n                        <button mat-icon-button color=\"primary\" class=\"actionBtns\" matTooltip=\"View Resource\"  >\n                          <span class=\"fa fa-user\"> </span>   \n                        </button>   \n                      </td>\n                    </ng-container> \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50,100]\" showFirstLastButtons></mat-paginator>\n\n \n                  </div> \n\n\n\n\n\n\n\n\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {ListingManagerService} from '../../../Services/listing-manager.service';\nimport { MatSort } from '@angular/material/sort'; \n\nimport { MatTableDataSource } from '@angular/material/table'; \n\nimport {MatPaginator} from '@angular/material/paginator';\n@Component({\n  selector: 'app-approved-resources',\n  templateUrl: './approved-resources.component.html',\n  styleUrls: ['./approved-resources.component.css']\n})\nexport class ApprovedResourcesComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,private ProjectService:ProjectService,private ListingManagerService:ListingManagerService) { }\n\n  displayedColumns: string[] = ['No','Resource_name','Requirement_name','Requirement_start','C_short_name' ];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n\n  }  \n  ngOnInit(): void { \n    this.getapprovedResources();\n  }\n  getapprovedResources(){\n    this.ListingManagerService.listofApprovedResources().subscribe(data =>{\n      console.log(data); \n      this.dataSource.data = data;   \n    \n    });\n  }\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Approved Resources</h4> \n       </div> \n       <div class=\"col-sm-6\">\n       \n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">      \n            <div class=\"table-responsive\"  > \n\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" >\n                                                 \n \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> No </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{i+1}} </td>\n                      </ng-container>   \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Resource_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Resource_name </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.ResourceTb.Resource_name}} </td>\n                      </ng-container>  \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Requirement_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Requirement_name </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.RequirementsTb.Requirement_name}} </td>\n                      </ng-container>  \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Requirement_start\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Requirement_start </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.RequirementsTb.Requirement_start}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"C_short_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.RequirementsTb.CompanyTb.C_short_name}} </td>\n                      </ng-container>     \n  \n \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50,100]\" showFirstLastButtons></mat-paginator>\n        </div> \n\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { ViewChild } from '@angular/core';\n@Component({\n  selector: 'app-bookmarks',\n  templateUrl: './bookmarks.component.html',\n  styleUrls: ['./bookmarks.component.css']\n})\nexport class BookmarksComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort; \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource = new MatTableDataSource();\n  \n  displayedColumns: string[] = ['No','Resource_name','Resource_Designation','Resource_rate','Available_from','Available_to','Action' ];\n  \n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  \n  } \n  constructor(private ProjectService :ProjectService , private Router:Router) { }\n\n  ngOnInit(): void {\n    this.ProjectService.getBookmark().subscribe(data =>{\n      console.log(data); \n        this.dataSource.data=data;\n  }, error => {\n    console.log(error); \n  });\n  }\n  removeBookmark(Resource_id){\n    this.ProjectService.removeBookmark(Resource_id).subscribe(data =>{\n      console.log(data); \n      this.ngOnInit();\n  }, error => {\n    console.log(error); \n  });\n  }\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Bookmarks</h4> \n       </div> \n       <div class=\"col-sm-6\">\n        \n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">    \n    <div class=\"row\"> \n            <div class=\"col-sm-12\">\n\n\n\n                <div class=\"table-responsive cusheight\">  \n\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" >\n                                                 \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> No </th>\n                      <td mat-cell *matCellDef=\"let element;let i =index;\"> \n                        {{i+1}}\n                          \n                      </td>\n                    </ng-container> \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"Resource_name\" >\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Resource_name}} </td>\n                    </ng-container>\n                  \n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"Resource_Designation\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Designation </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Resource_Designation}} </td>\n                    </ng-container>\n                  \n                    <!-- Weight Column -->\n                    <ng-container matColumnDef=\"Resource_rate\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Rate/Hr </th>\n                      <td mat-cell *matCellDef=\"let element\"> {{element.Resource_rate}} </td>\n                    </ng-container>\n                  \n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"Available_from\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header>From </th>\n                      <td mat-cell *matCellDef=\"let element\"> \n                        <mat-form-field appearance=\"legacy\" class=\"dateWidth\">\n                          <mat-label>{{element.Available_from}}</mat-label>\n                          <input matInput [matDatepicker]=\"picker\" [min]=\"today\" disabled  >\n                          <mat-datepicker-toggle matSuffix [for]=\"picker\" disabled></mat-datepicker-toggle>\n                          <mat-datepicker #picker disabled=\"false\" ></mat-datepicker>\n                        </mat-form-field>\n\n                      </td>\n                    </ng-container>\n                  \n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"Available_to\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> To </th>\n                      <td mat-cell *matCellDef=\"let element\"> \n\n                        <mat-form-field appearance=\"legacy\" class=\"dateWidth\">\n                          <mat-label>{{element.Available_to}}</mat-label>\n                          <input matInput [matDatepicker]=\"picker\" [min]=\"element.Available_from\" disabled  >\n                          <mat-datepicker-toggle matSuffix [for]=\"picker\" disabled></mat-datepicker-toggle>\n                          <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n                        </mat-form-field>\n                      </td>\n                    </ng-container>  \n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"Action\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                      <td mat-cell *matCellDef=\"let element\"> \n\n                        <button  mat-stroked-button color=\"primary\"aria-label=\"Remove\" (click)=\"removeBookmark(element.Resource_id)\">\n                         <span class=\"fa fa-bookmark\"> </span> Remove\n                        </button>\n \n                      </td>\n                    </ng-container>  \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50,100]\" showFirstLastButtons></mat-paginator>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            </div>\n    </div>\n    </div>\n    </div>\n\n\n \n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {ListingManagerService} from '../../../Services/listing-manager.service';\nimport { MatSort } from '@angular/material/sort'; \n\nimport { MatTableDataSource } from '@angular/material/table'; \n\nimport {MatPaginator} from '@angular/material/paginator';\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.css']\n})\nexport class RequestsComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,private ProjectService:ProjectService,private ListingManagerService:ListingManagerService) { }\n\n  displayedColumns: string[] = ['No','Resource_name','Requirement_name','Requirement_start','C_short_name','Action'];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngAfterViewInit() { \n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n\n  }  \n  ngOnInit(): void {\n    this.resourceRequests();\n  }\n  resourceRequests(){\n    this.ListingManagerService.resourceRequests().subscribe(data =>{\n      console.log(data); \n      this.dataSource.data = data;   \n    \n    });\n  }\n  approveResources(Resource_id,Requirement_id){\n    this.ListingManagerService.approveResources(Resource_id,Requirement_id).subscribe(data =>{\n      console.log(data);     \n    \n    });\n  }\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Resource Requests</h4> \n       </div> \n       <div class=\"col-sm-6\">\n       \n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">     \n            <div class=\"table-responsive\"  > \n\n                <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" >\n                                                 \n \n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"No\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> No </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{i+1}} </td>\n                      </ng-container>   \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Resource_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Resource_name </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.ResourceTb.Resource_name}} </td>\n                      </ng-container>  \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Requirement_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Requirement_name </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.RequirementsTb.Requirement_name}} </td>\n                      </ng-container>  \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Requirement_start\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Requirement_start </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.RequirementsTb.Requirement_start}} </td>\n                      </ng-container> \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"C_short_name\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Company </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\"> {{element.RequirementsTb.CompanyTb.C_short_name}} </td>\n                      </ng-container>  \n                      <!-- Position Column -->\n                      <ng-container matColumnDef=\"Action\" >\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                        <td mat-cell *matCellDef=\"let element;let i =index;\">  \n                            <button mat-icon-button color='primary' class=\"actionBtns\" (click)=\"approveResources(element.ResourceTb.Resource_id,element.RequirementsTb.Requirement_id)\">\n                               <span class=\"fa fa-check\"></span>\n                              </button> \n                              <button mat-icon-button color='warn' class=\"actionBtns\">\n                                 <span class=\"fa fa-close\"></span>\n                                </button> \n                        </td>\n                      </ng-container>   \n  \n \n                  \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                  </table>\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 50,100]\" showFirstLastButtons></mat-paginator>\n         </div>\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { EventEmitter, Output, InjectionToken, forwardRef, Component, ElementRef, NgZone, Inject, PLATFORM_ID, Optional, Input, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport * as ɵngcc0 from '@angular/core';\n\nfunction EditorComponent_ng_template_0_Template(rf, ctx) { }\nconst getTinymce = () => {\n    const w = typeof window !== 'undefined' ? window : undefined;\n    return w && w.tinymce ? w.tinymce : null;\n};\nconst ɵ0$2 = getTinymce;\n\nclass Events {\n    constructor() {\n        this.onBeforePaste = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onContextMenu = new EventEmitter();\n        this.onCopy = new EventEmitter();\n        this.onCut = new EventEmitter();\n        this.onDblclick = new EventEmitter();\n        this.onDrag = new EventEmitter();\n        this.onDragDrop = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDragGesture = new EventEmitter();\n        this.onDragOver = new EventEmitter();\n        this.onDrop = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onFocusIn = new EventEmitter();\n        this.onFocusOut = new EventEmitter();\n        this.onKeyDown = new EventEmitter();\n        this.onKeyPress = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onMouseDown = new EventEmitter();\n        this.onMouseEnter = new EventEmitter();\n        this.onMouseLeave = new EventEmitter();\n        this.onMouseMove = new EventEmitter();\n        this.onMouseOut = new EventEmitter();\n        this.onMouseOver = new EventEmitter();\n        this.onMouseUp = new EventEmitter();\n        this.onPaste = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onActivate = new EventEmitter();\n        this.onAddUndo = new EventEmitter();\n        this.onBeforeAddUndo = new EventEmitter();\n        this.onBeforeExecCommand = new EventEmitter();\n        this.onBeforeGetContent = new EventEmitter();\n        this.onBeforeRenderUI = new EventEmitter();\n        this.onBeforeSetContent = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onClearUndos = new EventEmitter();\n        this.onDeactivate = new EventEmitter();\n        this.onDirty = new EventEmitter();\n        this.onExecCommand = new EventEmitter();\n        this.onGetContent = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.onInit = new EventEmitter();\n        this.onInitNgModel = new EventEmitter();\n        this.onLoadContent = new EventEmitter();\n        this.onNodeChange = new EventEmitter();\n        this.onPostProcess = new EventEmitter();\n        this.onPostRender = new EventEmitter();\n        this.onPreInit = new EventEmitter();\n        this.onPreProcess = new EventEmitter();\n        this.onProgressState = new EventEmitter();\n        this.onRedo = new EventEmitter();\n        this.onRemove = new EventEmitter();\n        this.onReset = new EventEmitter();\n        this.onResizeEditor = new EventEmitter();\n        this.onSaveContent = new EventEmitter();\n        this.onSetAttrib = new EventEmitter();\n        this.onObjectResizeStart = new EventEmitter();\n        this.onObjectResized = new EventEmitter();\n        this.onObjectSelected = new EventEmitter();\n        this.onSetContent = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onSubmit = new EventEmitter();\n        this.onUndo = new EventEmitter();\n        this.onVisualAid = new EventEmitter();\n    }\n}\nEvents.ɵfac = function Events_Factory(t) { return new (t || Events)(); };\nEvents.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Events, outputs: { onBeforePaste: \"onBeforePaste\", onBlur: \"onBlur\", onClick: \"onClick\", onContextMenu: \"onContextMenu\", onCopy: \"onCopy\", onCut: \"onCut\", onDblclick: \"onDblclick\", onDrag: \"onDrag\", onDragDrop: \"onDragDrop\", onDragEnd: \"onDragEnd\", onDragGesture: \"onDragGesture\", onDragOver: \"onDragOver\", onDrop: \"onDrop\", onFocus: \"onFocus\", onFocusIn: \"onFocusIn\", onFocusOut: \"onFocusOut\", onKeyDown: \"onKeyDown\", onKeyPress: \"onKeyPress\", onKeyUp: \"onKeyUp\", onMouseDown: \"onMouseDown\", onMouseEnter: \"onMouseEnter\", onMouseLeave: \"onMouseLeave\", onMouseMove: \"onMouseMove\", onMouseOut: \"onMouseOut\", onMouseOver: \"onMouseOver\", onMouseUp: \"onMouseUp\", onPaste: \"onPaste\", onSelectionChange: \"onSelectionChange\", onActivate: \"onActivate\", onAddUndo: \"onAddUndo\", onBeforeAddUndo: \"onBeforeAddUndo\", onBeforeExecCommand: \"onBeforeExecCommand\", onBeforeGetContent: \"onBeforeGetContent\", onBeforeRenderUI: \"onBeforeRenderUI\", onBeforeSetContent: \"onBeforeSetContent\", onChange: \"onChange\", onClearUndos: \"onClearUndos\", onDeactivate: \"onDeactivate\", onDirty: \"onDirty\", onExecCommand: \"onExecCommand\", onGetContent: \"onGetContent\", onHide: \"onHide\", onInit: \"onInit\", onInitNgModel: \"onInitNgModel\", onLoadContent: \"onLoadContent\", onNodeChange: \"onNodeChange\", onPostProcess: \"onPostProcess\", onPostRender: \"onPostRender\", onPreInit: \"onPreInit\", onPreProcess: \"onPreProcess\", onProgressState: \"onProgressState\", onRedo: \"onRedo\", onRemove: \"onRemove\", onReset: \"onReset\", onResizeEditor: \"onResizeEditor\", onSaveContent: \"onSaveContent\", onSetAttrib: \"onSetAttrib\", onObjectResizeStart: \"onObjectResizeStart\", onObjectResized: \"onObjectResized\", onObjectSelected: \"onObjectSelected\", onSetContent: \"onSetContent\", onShow: \"onShow\", onSubmit: \"onSubmit\", onUndo: \"onUndo\", onVisualAid: \"onVisualAid\" } });\nEvents.propDecorators = {\n    onBeforePaste: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    onClick: [{ type: Output }],\n    onContextMenu: [{ type: Output }],\n    onCopy: [{ type: Output }],\n    onCut: [{ type: Output }],\n    onDblclick: [{ type: Output }],\n    onDrag: [{ type: Output }],\n    onDragDrop: [{ type: Output }],\n    onDragEnd: [{ type: Output }],\n    onDragGesture: [{ type: Output }],\n    onDragOver: [{ type: Output }],\n    onDrop: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onFocusIn: [{ type: Output }],\n    onFocusOut: [{ type: Output }],\n    onKeyDown: [{ type: Output }],\n    onKeyPress: [{ type: Output }],\n    onKeyUp: [{ type: Output }],\n    onMouseDown: [{ type: Output }],\n    onMouseEnter: [{ type: Output }],\n    onMouseLeave: [{ type: Output }],\n    onMouseMove: [{ type: Output }],\n    onMouseOut: [{ type: Output }],\n    onMouseOver: [{ type: Output }],\n    onMouseUp: [{ type: Output }],\n    onPaste: [{ type: Output }],\n    onSelectionChange: [{ type: Output }],\n    onActivate: [{ type: Output }],\n    onAddUndo: [{ type: Output }],\n    onBeforeAddUndo: [{ type: Output }],\n    onBeforeExecCommand: [{ type: Output }],\n    onBeforeGetContent: [{ type: Output }],\n    onBeforeRenderUI: [{ type: Output }],\n    onBeforeSetContent: [{ type: Output }],\n    onChange: [{ type: Output }],\n    onClearUndos: [{ type: Output }],\n    onDeactivate: [{ type: Output }],\n    onDirty: [{ type: Output }],\n    onExecCommand: [{ type: Output }],\n    onGetContent: [{ type: Output }],\n    onHide: [{ type: Output }],\n    onInit: [{ type: Output }],\n    onInitNgModel: [{ type: Output }],\n    onLoadContent: [{ type: Output }],\n    onNodeChange: [{ type: Output }],\n    onPostProcess: [{ type: Output }],\n    onPostRender: [{ type: Output }],\n    onPreInit: [{ type: Output }],\n    onPreProcess: [{ type: Output }],\n    onProgressState: [{ type: Output }],\n    onRedo: [{ type: Output }],\n    onRemove: [{ type: Output }],\n    onReset: [{ type: Output }],\n    onResizeEditor: [{ type: Output }],\n    onSaveContent: [{ type: Output }],\n    onSetAttrib: [{ type: Output }],\n    onObjectResizeStart: [{ type: Output }],\n    onObjectResized: [{ type: Output }],\n    onObjectSelected: [{ type: Output }],\n    onSetContent: [{ type: Output }],\n    onShow: [{ type: Output }],\n    onSubmit: [{ type: Output }],\n    onUndo: [{ type: Output }],\n    onVisualAid: [{ type: Output }]\n};\n\nconst validEvents = [\n    'onActivate',\n    'onAddUndo',\n    'onBeforeAddUndo',\n    'onBeforeExecCommand',\n    'onBeforeGetContent',\n    'onBeforeRenderUI',\n    'onBeforeSetContent',\n    'onBeforePaste',\n    'onBlur',\n    'onChange',\n    'onClearUndos',\n    'onClick',\n    'onContextMenu',\n    'onCopy',\n    'onCut',\n    'onDblclick',\n    'onDeactivate',\n    'onDirty',\n    'onDrag',\n    'onDragDrop',\n    'onDragEnd',\n    'onDragGesture',\n    'onDragOver',\n    'onDrop',\n    'onExecCommand',\n    'onFocus',\n    'onFocusIn',\n    'onFocusOut',\n    'onGetContent',\n    'onHide',\n    'onInit',\n    'onKeyDown',\n    'onKeyPress',\n    'onKeyUp',\n    'onLoadContent',\n    'onMouseDown',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseOut',\n    'onMouseOver',\n    'onMouseUp',\n    'onNodeChange',\n    'onObjectResizeStart',\n    'onObjectResized',\n    'onObjectSelected',\n    'onPaste',\n    'onPostProcess',\n    'onPostRender',\n    'onPreProcess',\n    'onProgressState',\n    'onRedo',\n    'onRemove',\n    'onReset',\n    'onResizeEditor',\n    'onSaveContent',\n    'onSelectionChange',\n    'onSetAttrib',\n    'onSetContent',\n    'onShow',\n    'onSubmit',\n    'onUndo',\n    'onVisualAid'\n];\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst bindHandlers = (ctx, editor) => {\n    const allowedEvents = getValidEvents(ctx);\n    allowedEvents.forEach((eventName) => {\n        const eventEmitter = ctx[eventName];\n        editor.on(eventName.substring(2), (event) => ctx.ngZone.run(() => eventEmitter.emit({ event, editor })));\n    });\n};\nconst ɵ0$1 = bindHandlers;\nconst getValidEvents = (ctx) => {\n    const ignoredEvents = parseStringProperty(ctx.ignoreEvents, []);\n    const allowedEvents = parseStringProperty(ctx.allowedEvents, validEvents).filter((event) => validEvents.includes(event) && !ignoredEvents.includes(event));\n    return allowedEvents;\n};\nconst ɵ1$1 = getValidEvents;\nconst parseStringProperty = (property, defaultValue) => {\n    if (typeof property === 'string') {\n        return property.split(',').map((value) => value.trim());\n    }\n    if (Array.isArray(property)) {\n        return property;\n    }\n    return defaultValue;\n};\nconst ɵ2 = parseStringProperty;\nlet unique = 0;\nconst uuid = (prefix) => {\n    const date = new Date();\n    const time = date.getTime();\n    const random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nconst ɵ3 = uuid;\nconst isTextarea = (element) => typeof element !== 'undefined' && element.tagName.toLowerCase() === 'textarea';\nconst ɵ4 = isTextarea;\nconst normalizePluginArray = (plugins) => {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nconst ɵ5 = normalizePluginArray;\nconst mergePlugins = (initPlugins, inputPlugins) => normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\nconst ɵ6 = mergePlugins;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst ɵ7 = noop;\nconst isNullOrUndefined = (value) => value === null || value === undefined;\nconst ɵ8 = isNullOrUndefined;\n\n/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst createState = () => ({\n    listeners: [],\n    scriptId: uuid('tiny-script'),\n    scriptLoaded: false\n});\nconst ɵ0 = createState;\nconst CreateScriptLoader = () => {\n    let state = createState();\n    const injectScriptTag = (scriptId, doc, url, callback) => {\n        const scriptTag = doc.createElement('script');\n        scriptTag.referrerPolicy = 'origin';\n        scriptTag.type = 'application/javascript';\n        scriptTag.id = scriptId;\n        scriptTag.src = url;\n        const handler = () => {\n            scriptTag.removeEventListener('load', handler);\n            callback();\n        };\n        scriptTag.addEventListener('load', handler);\n        if (doc.head) {\n            doc.head.appendChild(scriptTag);\n        }\n    };\n    const load = (doc, url, callback) => {\n        if (state.scriptLoaded) {\n            callback();\n        }\n        else {\n            state.listeners.push(callback);\n            if (!doc.getElementById(state.scriptId)) {\n                injectScriptTag(state.scriptId, doc, url, () => {\n                    state.listeners.forEach((fn) => fn());\n                    state.scriptLoaded = true;\n                });\n            }\n        }\n    };\n    // Only to be used by tests.\n    const reinitialize = () => {\n        state = createState();\n    };\n    return {\n        load,\n        reinitialize\n    };\n};\nconst ɵ1 = CreateScriptLoader;\nconst ScriptLoader = CreateScriptLoader();\n\n/* eslint-disable @typescript-eslint/no-parameter-properties */\nconst TINYMCE_SCRIPT_SRC = new InjectionToken('TINYMCE_SCRIPT_SRC');\nconst EDITOR_COMPONENT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => EditorComponent),\n    multi: true\n};\nclass EditorComponent extends Events {\n    constructor(elementRef, ngZone, platformId, tinymceScriptSrc) {\n        super();\n        this.platformId = platformId;\n        this.tinymceScriptSrc = tinymceScriptSrc;\n        this.cloudChannel = '5';\n        this.apiKey = 'no-api-key';\n        this.id = '';\n        this.modelEvents = 'change input undo redo';\n        this.onTouchedCallback = noop;\n        this._elementRef = elementRef;\n        this.ngZone = ngZone;\n        this.initialise = this.initialise.bind(this);\n    }\n    set disabled(val) {\n        this._disabled = val;\n        if (this._editor && this._editor.initialized) {\n            this._editor.setMode(val ? 'readonly' : 'design');\n        }\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    get editor() {\n        return this._editor;\n    }\n    writeValue(value) {\n        if (this._editor && this._editor.initialized) {\n            this._editor.setContent(isNullOrUndefined(value) ? '' : value);\n        }\n        else {\n            this.initialValue = value === null ? undefined : value;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    setDisabledState(isDisabled) {\n        if (this._editor) {\n            this._editor.setMode(isDisabled ? 'readonly' : 'design');\n        }\n        else if (isDisabled) {\n            this.init = Object.assign(Object.assign({}, this.init), { readonly: true });\n        }\n    }\n    ngAfterViewInit() {\n        var _a;\n        if (isPlatformBrowser(this.platformId)) {\n            this.id = this.id || uuid('tiny-angular');\n            this.inline = this.inline !== undefined ? this.inline !== false : !!((_a = this.init) === null || _a === void 0 ? void 0 : _a.inline);\n            this.createElement();\n            if (getTinymce() !== null) {\n                this.initialise();\n            }\n            else if (this._element && this._element.ownerDocument) {\n                ScriptLoader.load(this._element.ownerDocument, this.getScriptSrc(), this.initialise.bind(this));\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (getTinymce() !== null) {\n            getTinymce().remove(this._editor);\n        }\n    }\n    createElement() {\n        const tagName = typeof this.tagName === 'string' ? this.tagName : 'div';\n        this._element = document.createElement(this.inline ? tagName : 'textarea');\n        if (this._element) {\n            if (document.getElementById(this.id)) {\n                /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n                console.warn(`TinyMCE-Angular: an element with id [${this.id}] already exists. Editors with duplicate Id will not be able to mount`);\n            }\n            this._element.id = this.id;\n            if (isTextarea(this._element)) {\n                this._element.style.visibility = 'hidden';\n            }\n            this._elementRef.nativeElement.appendChild(this._element);\n        }\n    }\n    initialise() {\n        const finalInit = Object.assign(Object.assign({}, this.init), { target: this._element, inline: this.inline, readonly: this.disabled, plugins: mergePlugins(this.init && this.init.plugins, this.plugins), toolbar: this.toolbar || (this.init && this.init.toolbar), setup: (editor) => {\n                this._editor = editor;\n                editor.on('init', (_e) => {\n                    this.initEditor(editor);\n                });\n                bindHandlers(this, editor);\n                if (this.init && typeof this.init.setup === 'function') {\n                    this.init.setup(editor);\n                }\n            } });\n        if (isTextarea(this._element)) {\n            this._element.style.visibility = '';\n        }\n        this.ngZone.runOutsideAngular(() => {\n            getTinymce().init(finalInit);\n        });\n    }\n    getScriptSrc() {\n        return isNullOrUndefined(this.tinymceScriptSrc) ?\n            `https://cdn.tiny.cloud/1/${this.apiKey}/tinymce/${this.cloudChannel}/tinymce.min.js` :\n            this.tinymceScriptSrc;\n    }\n    initEditor(editor) {\n        editor.on('blur', () => this.ngZone.run(() => this.onTouchedCallback()));\n        editor.on(this.modelEvents, () => this.ngZone.run(() => this.emitOnChange(editor)));\n        if (typeof this.initialValue === 'string') {\n            this.ngZone.run(() => {\n                editor.setContent(this.initialValue);\n                if (editor.getContent() !== this.initialValue) {\n                    this.emitOnChange(editor);\n                }\n                if (this.onInitNgModel !== undefined) {\n                    this.onInitNgModel.emit(editor);\n                }\n            });\n        }\n    }\n    emitOnChange(editor) {\n        if (this.onChangeCallback) {\n            this.onChangeCallback(editor.getContent({ format: this.outputFormat }));\n        }\n    }\n}\nEditorComponent.ɵfac = function EditorComponent_Factory(t) { return new (t || EditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(TINYMCE_SCRIPT_SRC, 8)); };\nEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EditorComponent, selectors: [[\"editor\"]], inputs: { cloudChannel: \"cloudChannel\", apiKey: \"apiKey\", id: \"id\", modelEvents: \"modelEvents\", disabled: \"disabled\", initialValue: \"initialValue\", init: \"init\", inline: \"inline\", outputFormat: \"outputFormat\", tagName: \"tagName\", plugins: \"plugins\", toolbar: \"toolbar\", allowedEvents: \"allowedEvents\", ignoreEvents: \"ignoreEvents\" }, features: [ɵngcc0.ɵɵProvidersFeature([EDITOR_COMPONENT_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, template: function EditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, EditorComponent_ng_template_0_Template, 0, 0, \"ng-template\");\n    } }, styles: [\"[_nghost-%COMP%] { display: block; }\"] });\nEditorComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [TINYMCE_SCRIPT_SRC,] }] }\n];\nEditorComponent.propDecorators = {\n    cloudChannel: [{ type: Input }],\n    apiKey: [{ type: Input }],\n    init: [{ type: Input }],\n    id: [{ type: Input }],\n    initialValue: [{ type: Input }],\n    outputFormat: [{ type: Input }],\n    inline: [{ type: Input }],\n    tagName: [{ type: Input }],\n    plugins: [{ type: Input }],\n    toolbar: [{ type: Input }],\n    modelEvents: [{ type: Input }],\n    allowedEvents: [{ type: Input }],\n    ignoreEvents: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EditorComponent, [{\n        type: Component,\n        args: [{\n                selector: 'editor',\n                template: '<ng-template></ng-template>',\n                providers: [EDITOR_COMPONENT_VALUE_ACCESSOR],\n                styles: [':host { display: block; }']\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TINYMCE_SCRIPT_SRC]\n            }] }]; }, { cloudChannel: [{\n            type: Input\n        }], apiKey: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], modelEvents: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], initialValue: [{\n            type: Input\n        }], init: [{\n            type: Input\n        }], inline: [{\n            type: Input\n        }], outputFormat: [{\n            type: Input\n        }], tagName: [{\n            type: Input\n        }], plugins: [{\n            type: Input\n        }], toolbar: [{\n            type: Input\n        }], allowedEvents: [{\n            type: Input\n        }], ignoreEvents: [{\n            type: Input\n        }] }); })();\n\nclass EditorModule {\n}\nEditorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: EditorModule });\nEditorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function EditorModule_Factory(t) { return new (t || EditorModule)(); }, imports: [[CommonModule, FormsModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EditorModule, { declarations: function () { return [EditorComponent]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [EditorComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EditorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, FormsModule],\n                declarations: [EditorComponent],\n                exports: [EditorComponent]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EditorComponent, EditorModule, TINYMCE_SCRIPT_SRC, Events as ɵa };\n\n//# sourceMappingURL=tinymce-tinymce-angular.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Router} from \"@angular/router\"\nimport {SharedService} from '../../../Services/shared.service';\n\n@Component({\n  selector: 'app-interview-shedule',\n  templateUrl: './interview-shedule.component.html',\n  styleUrls: ['./interview-shedule.component.css']\n})\nexport class InterviewSheduleComponent implements OnInit {\nNAME =\"\";\nRequirement_id=0;\nResource_id=0;\nemailBody=\"\";\nUser_id = sessionStorage.getItem('USER_ID');\n  today = new Date();\n  dd = String(this.today.getDate()).padStart(2, '0');\n  mm = String(this.today.getMonth() + 1).padStart(2, '0');  \n  yyyy = this.today.getFullYear();\n  todaysDate =this.yyyy + '-' + this.dd + '-' + this.mm;\n\n  interviewForm: FormGroup; \n  Company_name: any;\n  User_designation: any;\n  User_firstName: any;\n  User_secondName: any;\n  constructor(private SharedService:SharedService, private route: ActivatedRoute,private formBuilder: FormBuilder,private ProjectService:ProjectService,private snackBar: MatSnackBar,private router:Router) {\n    this.route.queryParams.subscribe(params => {\n        console.log(params);\n        this.NAME = params.name;\n        this.Requirement_id =params.r_id;\n        this.Resource_id =params.code;\n         \n\n    });\n}\n\nbodymail = new FormControl('', [ Validators.required, Validators.minLength(3)]);\ninterviewDate = new FormControl(this.todaysDate, [ Validators.required ]);\ninterviewTime = new FormControl('10:00', [ Validators.required ]);\n\n  ngOnInit(): void {\n    this.getProfileData(this.User_id);\n \n    this.interviewForm = this.formBuilder.group({\n      bodymail : this.bodymail,  \n      interviewDate : this.interviewDate,  \n      interviewTime : this.interviewTime,  \n    });\n    \n  }\n  mailInterview(){\n    if(this.interviewForm.invalid){\n      console.log(\"Form error\" + this.interviewForm.errors); \n      return;\n    }else{\n      console.log(this.interviewForm.value); \n      this.ProjectService.mailInterview(this.Requirement_id,this.Resource_id,this.interviewForm.value).subscribe(data =>{\n        console.log(data);   \n        if(data['Status']==true){ \n          this.openSnackBar('Interview call latter sent!');\n          setTimeout(() => {\n            this.router.navigate(['/Projectmanagement/Interviewing']);\n        }, 3000);\n        } \n      });\n\n    }\n  }\n  openSnackBar(message: string, action: string='') {\n    this.snackBar.open(message, action, {\n       duration: 1500,\n    });\n }\n getProfileData(id){\n  var User_id = id;\n  this.SharedService.getProfileData(User_id).subscribe(data =>{\n    console.log(data); \n   let companyData =data['CompanyTb'];\n   let userData =data;   \n\n   this.Company_name = companyData.C_full_name; \n   this.User_designation = userData['User_designation'];\n   this.User_firstName = userData['User_firstname'];\n   this.User_secondName = userData['User_secondName'];\n \n\n   this.emailBody = 'Dear '+ this.NAME +',<br><br> '+this.User_firstName+' from '+this.Company_name+' has viewed your profile and found you to be an appropriate match.';\n    this.emailBody+='He / She would like to schedule an interview with you.Proposed interview date: '+this.interviewForm.get('interviewDate').value+' and time: '+this.interviewForm.get('interviewTime').value +'.';\n    this.emailBody+='<br>For project details <a href=\"http://expertsq.com\"><i>click here</i></a>';\n\n    this.interviewForm.controls.bodymail.setValue(this.emailBody); \n\n   });\n}\n \n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Interview Shedule</h4> \n       </div> \n       <div class=\"col-sm-6\">\n       \n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">    \n            <p>You are sending mail to {{NAME}}</p>\n            <h6> Interview Date </h6> \n\n     <form [formGroup]=\"interviewForm\" (ngSubmit)=\"mailInterview()\">\n<div class=\"row\">\n    <div class=\"col-sm-4\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Interview Date</mat-label>\n          <input matInput [value]=\"todaysDate\"  [matDatepicker]=\"dp3\" disabled formControlName=\"interviewDate\" id=\"interviewDate\" name=\"interviewDate\"  >\n          <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n          <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n\n    </div>\n    <div class=\"col-sm-4\">\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Interview Time</mat-label>\n            <input type=\"time\"  matInput formControlName=\"interviewTime\"  id=\"interviewTime\" name=\"interviewTime\"  >\n          </mat-form-field>\n    </div>\n</div>\n     <h6> Body </h6>\n\n     <div class=\"row\">\n         <div class=\"col-sm-12\">\n            <!-- <mat-form-field appearance=\"outline\" class=\"fwidth\">\n                <mat-label>Your email body</mat-label>\n                <textarea matInput rows=\"15\" formControlName=\"bodymail\" id=\"bodymail\" name=\"bodymail\"></textarea>\n              </mat-form-field> -->\n              <editor      \n              [formControl]=\"bodymail\" \n              apiKey=\"9b9nj42iu5dgy30xgt6fb4o9z29i1na23le5wcvky3gwb617\"\n              [init]=\"{\n                icons: 'material',\n                skin: 'borderless',\n                plugins: 'wordcount,numlist,fullpage,spellchecker,paste,link,insertdatetime,code',\n                menubar: false,\n                min_height: 150,\n                branding: false\n              }\" \n            >\n            Hi\n        </editor>\n\n         </div>\n     </div><br>\n     <div class=\"row\">\n         <div class=\"col-sm-12\">\n            \n            <div class=\"rightfloats\">\n                <button type=\"submit\" mat-raised-button color=\"primary\">Send <span class=\"fa fa-send\"></span> </button>\n\n            </div>\n\n         </div>\n     </div>\n</form>\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>"," import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { ListingManagerService } from '../../../Services/listing-manager.service';\nimport {MatDialog,MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { PopupTechnologyComponent } from '../../popup-technology/popup-technology.component';\nimport { PopupEducationComponent } from '../../popup-education/popup-education.component';\nimport { PopupDomainComponent } from '../../popup-domain/popup-domain.component';\nimport { PopupRoleComponent } from '../../popup-role/popup-role.component';\n\n@Component({\n  selector: 'app-create-assignments',\n  templateUrl: './create-assignments.component.html',\n  styleUrls: ['./create-assignments.component.css']\n})\nexport class CreateAssignmentsComponent implements OnInit {\n  Project_id;\n  Requirement_Form: FormGroup; \n  submitted = false; \n  domainsList=[];\n  rolesList=[];\n  technologiesList=[];\n  educationsList=[];\n  selectedTechnologies=[];\n  selectedDomains=[];\n  selectedEducation=[];\n  selectedRoles=[];\n  User_id;\n  mainTech=[];\n  RDomains_List: any[];\n  RJobRoles_List: any[];\n  tech_lists: any[];\n  educations: any[];\n  isDoaminError: boolean;\n  education_list =[]; \n  educationStreams =[];\n  educationMtechs=[];\n  domain_list=[];\n  isJobError: boolean;\n  jobRole_list=[];\n  technology_list=[];\n  techFormGroup: FormGroup;\n  domainFormGroup: FormGroup;\n  jobRoleFormGroup: FormGroup;\n  educationFormGroup: FormGroup;\n  isTechError: boolean;\n  isEduError: boolean;\n  project_stime :Date;\nproject_etime:Date;\n  constructor(  private _Activatedroute:ActivatedRoute,public dialog: MatDialog, private ListingManagerService:ListingManagerService, private ProjectService :ProjectService, private formBuilder: FormBuilder,private Router:Router) { \n    this.Project_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n    this.User_id = sessionStorage.getItem('USER_ID');  \n  }\n\n  Project_name = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Requirement_name = new FormControl('', [ Validators.required, Validators.minLength(3)]);\n  Week_duration = new FormControl('', [ Validators.required ]);\n  Week_must_time = new FormControl('', [ Validators.required]);\n  Technology_id = new FormControl('');\n  Domain_id = new FormControl('' );\n  Roles_id = new FormControl('' );\n  Certification = new FormControl('' );\n  Hours_per_week = new FormControl('', [ Validators.required ]);\n  Hours_per_month = new FormControl('', [ Validators.required ]);\n  Hours_per_day = new FormControl('', [ Validators.required ]);\n  No_of_resources = new FormControl('', [ Validators.required ]);\n  Requirements_description = new FormControl('', [ Validators.required ]);\n  Technology_name = new FormControl('', [ Validators.required]);\n  Technology_version = new FormControl('', [ Validators.required]);\n  Technology_experience = new FormControl('', [ Validators.required]);\n  Technology_level = new FormControl('EXPERT', [ Validators.required]);\n  Technology_parent = new FormControl('', [ Validators.required]);\n  Domain_name = new FormControl('', [ Validators.required]);\n  Domain_duration = new FormControl('', [ Validators.required]);\n  Job_title = new FormControl('', [ Validators.required]);\n  Job_duration = new FormControl('', [ Validators.required]);\n  Education = new FormControl('', [ Validators.required]);\n  Pass_year = new FormControl('', [ Validators.required]);\n  Start_date = new FormControl('', [ Validators.required]);\n  End_date = new FormControl('', [ Validators.required]);\n\n  ngOnInit(): void {\n    this.findProject(); \n    this.getTechnologyLists();\n    this.getEducationLists();\n    this.getDomainLists();\n    this.getJobRoleLists(); \n    this.Requirement_Form = this.formBuilder.group({\n      Project_name : this.Project_name,\n      Requirement_name : this.Requirement_name,\n      Week_duration : this.Week_duration,\n      Week_must_time : this.Week_must_time,\n      Technology_id : this.formBuilder.array([]),\n      Domain_id : this.formBuilder.array([]),\n      Roles_id : this.formBuilder.array([]),\n      Certification : this.formBuilder.array([]),\n      Hours_per_week : this.Hours_per_week,\n      Hours_per_month : this.Hours_per_month,\n      Hours_per_day : this.Hours_per_day,\n      No_of_resources : this.No_of_resources,\n      Requirements_description : this.Requirements_description, \n      Start_date : this.Start_date, \n      End_date : this.End_date,  \n    });\n    this.techFormGroup = this.formBuilder.group({\n      Technology_name : this.Technology_name,  \n      Technology_version : this.Technology_version,  \n      Technology_experience : this.Technology_experience,    \n      Technology_level : this.Technology_level,  \n      Technology_parent:this.Technology_parent\n  \n    });\n    this.domainFormGroup = this.formBuilder.group({\n      Domain_name : this.Domain_name,    \n      Domain_duration : this.Domain_duration,    \n  \n    }); \n    this.jobRoleFormGroup = this.formBuilder.group({\n      Job_title : this.Job_title,    \n      Job_duration : this.Job_duration,        \n  \n    }); \n    this.educationFormGroup = this.formBuilder.group({\n      Education : this.Education,    \n      Pass_year : this.Pass_year,        \n  \n    });\n  }\n   \n \nonSubmit(){\n   \n\n  if (this.Requirement_Form.invalid) {  \n    this.submitted =true; \n    console.log(\"Form error\" + this.Requirement_Form.errors);\n    return;\n  }else{  \n \n    this.ProjectService.createRequirement(this.Requirement_Form.value,this.technology_list,this.domain_list\n      ,this.jobRole_list,this.education_list,this.Project_id).subscribe(data =>{\n          \n         this.Router.navigate(['company/Projectmanagement']);  \n\n    }, error => {\n      console.log(error); \n    });\n  }\n\n}\nfindProject(){\n  this.ProjectService.searchProjectById(this.Project_id).subscribe(data =>{ \n    this.Requirement_Form.controls.Project_name.setValue(data['Project_name']);\n    this.project_stime =data['Start_date'];\n    this.project_etime =data['End_date']; \n\n}, error => {\n  console.log(error); \n});\n} \nget f() { return this.Requirement_Form.controls; }\n\n\n\n\ngetDomainLists(){\n  this.ListingManagerService.getDomainLists().subscribe(data =>{\n     this.RDomains_List=data;\n    \n  \n  }); \n\n}\ngetJobRoleLists(){\n  this.ListingManagerService.getJobRoleLists().subscribe(data =>{\n     this.RJobRoles_List=data; \n  }); \n\n}\ngetTechnologyLists(){\n  this.ListingManagerService.getTechnologyLists().subscribe(data =>{\n     \n    this.tech_lists=data; \n  }); \n\n}\ngetEducationLists(){\n  this.ListingManagerService.getEducationLists().subscribe(data =>{\n      \n    this.educations=data; \n  }); \n\n}\n\ngetEduStreams(val,e){\n  this.ListingManagerService.getEduStreams(val).subscribe(data =>{\n    console.log(\"----\");  \n    console.log(data);  \n    this.educationStreams=data; \n    console.log(data.length);\n    if(data.length ==0){\n    this.educationChangePopup(e);\n    }\n  }); \n\n}\n \neducationChange(e): void {  \n  console.log(e.target.value);\n  this.getEduStreams(e.target.value ,e);\n \n}\n\n \neducationChangePopup(e): void { \n   \n  const dialogRef = this.dialog.open(PopupEducationComponent, {\n    width: '450px',\n    data: {name: e.target.value}, \n    hasBackdrop: true,\n    disableClose : true\n  }); \n  dialogRef.afterClosed().subscribe(result => { \n   this.isDoaminError =false;\n   if(result.Passout_year != 0){\n    let eduData = {\n      Education : e.target.value,\n      Pass_year : result.Passout_year, \n    }\n    this.education_list.push(eduData);\n    console.log(this.education_list);  \n   }else{\n    e.target.checked =false;\n   }\n  });\n \n}\n \ndomainChange(e): void { \n  if(e.target.checked){ \n  const dialogRef = this.dialog.open(PopupDomainComponent, {\n    width: '450px',\n    data: {name: e.target.value}, \n    hasBackdrop: true,\n    disableClose : true\n  }); \n  dialogRef.afterClosed().subscribe(result => { \n   this.isDoaminError =false;\n   if(result.Experience > 0){\n    let domainData = {\n      Domain : e.target.value,\n      Domain_duration : result.Experience, \n    }\n    this.domain_list.push(domainData);\n    }else{\n    e.target.checked =false;\n   }\n  });\n}else{ \n  this.domain_list = this.domain_list.filter(m=>m.Domain!==e.target.value);\n } \n}\n\nroleChange(e): void { \n  if(e.target.checked){ \n  const dialogRef = this.dialog.open(PopupRoleComponent, {\n    width: '450px',\n    data: {name: e.target.value},\n    hasBackdrop: true,\n    disableClose : true\n  }); \n  dialogRef.afterClosed().subscribe(result => { \n   this.isJobError =false;\n   if(result.Experience > 0){\n    let jobRoleData = {\n     Job_title : e.target.value,\n     Job_duration : result.Experience, \n   }\n   this.jobRole_list.push(jobRoleData); \n    }else{\n    e.target.checked =false;\n   }\n  });\n}else{ \n  this.jobRole_list = this.jobRole_list.filter(m=>m.Job_title!==e.target.value);\n } \n}\n\nPopupTechnology(e){\n\n  \n    const dialogRef = this.dialog.open(PopupTechnologyComponent, {\n      width: '100%',\n      height : 'auto',\n      data: {Technology_name: e} \n    }); \n    dialogRef.afterClosed().subscribe(result => { \n       let techData = {\n        Technology : result.Technology_name,\n        Technology_version : result.Technology_version,\n        Technology_experience : result.Technology_experience,\n        Technology_level : result.Technology_level, \n      }\n      this.technology_list.push(techData); \n    }); \n}\n\naddTechnology(){\n  if(this.techFormGroup.invalid){\n    this.isTechError =true;\n\n  }else{\n    this.isTechError =false;\n  let techData = {\n    Technology : this.techFormGroup.value.Technology_name,\n    Technology_version : this.techFormGroup.value.Technology_version,\n    Technology_experience : this.techFormGroup.value.Technology_experience,\n    Technology_level : this.techFormGroup.value.Technology_level,\n    Technology_parent : this.techFormGroup.value.Technology_parent\n  }\n  this.technology_list.push(techData);\n  this.techFormGroup.reset(); \n}\n}\naddDomain(){\n  if(this.domainFormGroup.invalid){\n  this.isDoaminError =true;\n\n}else{\n  this.isDoaminError =false;\n  let domainData = {\n    Domain : this.domainFormGroup.value.Domain_name,\n    Domain_duration : this.domainFormGroup.value.Domain_duration, \n  }\n  this.domain_list.push(domainData);\n  this.domainFormGroup.reset(); \n}\n}\naddJobTitle(){\n  if(this.jobRoleFormGroup.invalid){\n  this.isJobError =true;\n\n}else{\n  this.isJobError =false;\n  let jobRoleData = {\n    Job_title : this.jobRoleFormGroup.value.Job_title,\n    Job_duration : this.jobRoleFormGroup.value.Job_duration, \n  }\n  this.jobRole_list.push(jobRoleData);\n  this.jobRoleFormGroup.reset(); \n}\n}\naddEducation(){\n  if(this.educationFormGroup.invalid){\n  this.isEduError =true;\n\n}else{\n  this.isEduError =false;\n  let eduData = {\n    Education : this.educationFormGroup.value.Education,\n    Pass_year : this.educationFormGroup.value.Pass_year, \n  }\n  this.education_list.push(eduData);\n  this.educationFormGroup.reset(); \n}\n}\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Add an Assignment</h4> \n       </div> \n       </div> \n\n    <div class=\"card\">\n        <div class=\"card-body\">  \n            <form [formGroup]=\"Requirement_Form\" (ngSubmit)=\"onSubmit()\">\n \n\n                <mat-horizontal-stepper  #stepper>\n                    <mat-step [stepControl]=\"Requirement_Form\" >\n                         <ng-template matStepLabel>Requirement Duration</ng-template>\n\n\n                         <div class=\"row\">\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Project Name<span class=\"redColor\">*</span> </label>\n                                 <input type=\"text\" #pName class=\"form-control form-control-square\" formControlName=\"Project_name\"   id=\"Project_name\" required \n                                 name=\"Project_name\"  placeholder=\"Project Name \" readonly> \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Requirement Name<span class=\"redColor\">*</span> </label>\n                                 <input type=\"text\" #rName class=\"form-control form-control-square\" formControlName=\"Requirement_name\"   id=\"Requirement_name\" required \n                                 name=\"Requirement_name\"  placeholder=\"Requirement Name \"  > \n                                 \n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Number of Resources<span class=\"redColor\">*</span> </label>\n                                 <input type=\"number\" #Nresources class=\"form-control form-control-square\" formControlName=\"No_of_resources\"   id=\"No_of_resources\" required \n                                 name=\"No_of_resources\"  placeholder=\"Number of Resources\"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Estimated Duration (Weeks)<span class=\"redColor\">*</span> </label>\n                                 <input type=\"number\" #eTime class=\"form-control form-control-square\" formControlName=\"Week_duration\"   id=\"Week_duration\" required \n                                 name=\"Week_duration\"  placeholder=\"Week duration\"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Min Guranteed Duration (Weeks)  </label>\n                                 <input type=\"number\" #mgTime class=\"form-control form-control-square\" formControlName=\"Week_must_time\"   id=\"Week_must_time\" required \n                                 name=\"Week_must_time\"  placeholder=\"Mandatory Duration in Weeks\"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Start Date </label>\n                                 <input type=\"date\" #sTime class=\"form-control form-control-square\" \n                                 formControlName=\"Start_date\"   id=\"Start_date\" required \n                                 min=\"{{project_stime}}\" \n                                 max=\"{{project_etime}}\"\n                                 name=\"Start_date\"> \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-3\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">End Date </label>\n                                 <input type=\"date\" #eTime class=\"form-control form-control-square\" formControlName=\"End_date\"   id=\"End_date\" required \n                                 name=\"End_date\"  min=\"{{project_stime}}\" max=\"{{project_etime}}\"   > \n                                 \n                                </div>\n                            </div>\n                             \n\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Hour/Month  </label>\n                                 <input type=\"number\" #hmonth class=\"form-control form-control-square\" formControlName=\"Hours_per_month\"   id=\"Hours_per_month\" required \n                                 name=\"Hours_per_month\"  placeholder=\"Hours per month\"   > \n                                 \n                                </div>\n                            </div>\n                                <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Hours/Week </label>\n                                 <input type=\"number\" #hWeek class=\"form-control form-control-square\" formControlName=\"Hours_per_week\"   id=\"Hours_per_week\" required \n                                 name=\"Hours_per_week\"  placeholder=\"Hours per week\" > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Hour/Day  </label>\n                                 <input type=\"number\" #hDay class=\"form-control form-control-square\" formControlName=\"Hours_per_day\"   id=\"Hours_per_day\" required \n                                 name=\"Hours_per_day\"  placeholder=\"Project Name \"  > \n                                 \n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\"> \n                                <div class=\"form-group\">\n                                 <label for=\"input-11\">Description<span class=\"redColor\">*</span> </label>\n                                 <textarea #description formControlName=\"Requirements_description\" id=\"Requirements_description\" class=\"form-control form-control-square\" name=\"\" id=\"\" cols=\"30\" rows=\"7\"></textarea>\n                                 \n                                </div>\n                            </div> \n                           </div>   \n                        <div class=\"goRight\">\n                          <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                            <span class=\"fa fa-forward\"></span> </button>\n                        </div> \n                    </mat-step>\n\n\n\n\n                    <mat-step [stepControl]=\"Requirement_Form\"  >\n   \n\n                        <ng-template matStepLabel>Skills</ng-template>\n                        <form [formGroup]=\"techFormGroup\" (ngSubmit)=\"addTechnology()\">\n                         <label for=\"input-11\"> Choose Technology<span class=\"redColor\">*</span></label><br>\n\n                          <div class=\"row\"> \n                             <div class=\"col-sm-12\">\n                               <mat-accordion>\n                                 <div class=\"marg\" *ngFor=\"let techncat of tech_lists; let i=index\">\n                                 <mat-expansion-panel hideToggle>\n                                   <mat-expansion-panel-header>\n                                     <mat-panel-title>\n                                         {{techncat.Technology_category}} \n                                     </mat-panel-title> \n                                   </mat-expansion-panel-header>\n                                     <mat-panel-description>\n                                         <div class=\"row\">\n                                             <div class=\"col-sm-12\">\n                                             <div class=\"Acheckbox icheck-inline\" *ngFor=\"let technology of techncat['TechnologyTbs']; let j=index\">\n                                             <label class=\"container\">   \n                                             <!-- <input type=\"checkbox\"  value =\"{{technology.Technology_name}}\" (change)=\"selectTech($event)\">\n                                               -->\n                                                   <button mat-raised-button   (click)=\"PopupTechnology(technology.Technology_name)\">\n                                                     {{technology.Technology_name}}\n                                                   </button>\n\n                                             </label>\n                                             </div> \n                                             </div> \n                                             </div>\n                                     </mat-panel-description> \n                                 </mat-expansion-panel>\n                                 </div>\n                                 </mat-accordion>\n\n                              \n                         </div> \n                          </div>\n                          <br>\n                          <p>Add custome technology <i>(Approval required by Admin)</i> </p> \n                        <div class=\"row\">\n                         <div class=\"col-sm-3\">\n\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Technology Name<span class=\"redColor\">*</span></label>\n                        <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Technology_name\" id=\"Technology_name\" \n                        name=\"Technology_name\"  placeholder=\"Technology Name\">\n                       </div>\n                         </div>\n                         <div class=\"col-sm-2\">\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Technology Version<span class=\"redColor\">*</span></label>\n                        <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Technology_version\" id=\"Technology_version\" \n                        name=\"Technology_version\"  placeholder=\"Total Experience of the resource\">\n                       </div>\n                         </div>\n                         <div class=\"col-sm-2\">\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Experience(years)<span class=\"redColor\">*</span></label>\n                        <input type=\"number\" class=\"form-control form-control-square\" formControlName=\"Technology_experience\" id=\"Technology_experience\" \n                        name=\"Technology_experience\"  placeholder=\"Total Experience of the resource\">\n                       </div> \n                         </div>\n                         <div class=\"col-sm-4\">\n                      <div class=\"form-group\">\n                        <label for=\"input-11\"> Expertise Level<span class=\"redColor\">*</span></label><br>\n                        <mat-radio-group aria-label=\"Select an option\" formControlName=\"Technology_level\" id=\"Technology_level\" \n                       name=\"Technology_level\">\n                       <mat-radio-button value=\"BEGINNER\" >Beginner</mat-radio-button>&nbsp; \n                       <mat-radio-button value=\"INTERMEDIATE\" >Intermediate</mat-radio-button>&nbsp;\n                       <mat-radio-button value=\"EXPERT\" [checked]=\"true\">Expert</mat-radio-button>\n                       </mat-radio-group> \n                       </div> \n                         </div>\n                         <div class=\"col-sm-3\">\n\n                      <div class=\"form-group\">\n                       <button type=\"submit\" mat-raised-button color=\"primary\">Add</button>\n                     </div>\n                         </div> \n                         <div class=\"col-sm-12\" id=\"goup\"> \n                           <div class=\"row\">\n                             <div class=\"inlinCol\" *ngFor=\"let technology of technology_list \" > \n                              <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                 <span>{{technology.Technology}} </span>  \n                              </button>\n\n                            </div>\n                           </div> \n                         </div>\n\n                        </div>\n                       </form> \n                        <div class=\"goRight\">\n                         <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                         <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                          <span class=\"fa fa-forward\"></span> </button>\n                        </div>\n\n\n\n\n\n                    </mat-step>\n \n                <mat-step>\n                    <ng-template matStepLabel>Domains</ng-template>\n                    <form [formGroup]=\"domainFormGroup\" (ngSubmit)=\"addDomain()\">  \n                      <div class=\"row\"> \n                         <div class=\"form-group\">\n                           <label for=\"input-11\">Domain Lists<span class=\"redColor\">*</span> </label><br>\n                           <div class=\"Acheckbox icheck-inline col-sm-3\" *ngFor=\"let domain of RDomains_List; let i=index\">\n                              <label class=\"container2 \"> {{domain.Domain}}\n                                  <input type=\"checkbox\"  value =\"{{domain.Domain}}\" (change)=\"domainChange($event)\">\n                                  <span class=\"checkmark\"></span>\n                                  </label>\n                            </div>  \n                          </div> \n                       </div> \n                      <p>Don't find the required domain ? Add custome domain</p>\n\n                    <div class=\"row\"> \n                     <div class=\"col-sm-4\"> \n                       <div class=\"form-group\">\n                         <label for=\"input-11\"> Domain<span class=\"redColor\">*</span></label>\n                         <input type=\"text\" [checked]=\"false\" class=\"form-control form-control-square\" formControlName=\"Domain_name\" id=\"Domain_name\" \n                         name=\"Domain_name\"  placeholder=\"Domain / Sector name\">\n                        </div> \n                          </div> \n                          <div class=\"col-sm-4\"> \n\n                           \n                        <div class=\"form-group\">\n                         <label for=\"input-11\"> Duration<span class=\"redColor\">*</span></label> \n                             <div class=\"input-group\">\n                               <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Domain_duration\" id=\"Domain_duration\" \n                               name=\"Domain_duration\"  placeholder=\"  Duration in years\">                                                      \n                               <div class=\"input-group-append\">\n                                 <span class=\"input-group-text\">\n                                   <button type=\"submit\" mat-raised-button color=\"primary\" >Add</button>\n\n                                 </span>\n                               </div>\n                               </div>\n                            </div> \n\n                               </div>\n                               <div class=\"col-sm-12\"> \n                                 <div class=\"row\">\n                                   <div class=\"inlinCol\" *ngFor=\"let domain of domain_list \" > \n                                    <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                       <span>{{domain.Domain}} </span>  \n                                    </button> \n                                  </div>\n                                 </div> \n                               </div>  \n\n                               <div class=\"col-sm-12\">\n\n                         <div id=\"notSucess\" class=\"{{isDoaminError ? 'successClass' : 'notSucess'}}\">\n                           <div class=\"row\">\n                             <div class=\"col-sm-12\">\n                               <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n                                 <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                                 <div class=\"alert-icon\">\n                                  <i class=\"zmdi zmdi-check-circle\"></i>\n                                 </div>\n                                 <div class=\"alert-message\">\n                                   <span><strong>Error! </strong> Please fill all the data.</span>\n                                 </div>\n                                 </div>\n                             </div>\n                           </div>\n                         </div>\n                         </div>\n                           </div> \n                           </form>\n\n                    <div class=\"goRight\">\n                     <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                     <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                      <span class=\"fa fa-forward\"></span> </button>\n                    </div>\n                </mat-step>\n                    <mat-step>\n                        <ng-template matStepLabel>Education</ng-template>\n\n\n\n                        <form [formGroup]=\"educationFormGroup\" (ngSubmit)=\"addEducation()\">\n                          <div class=\"row\"> \n                            <div class=\"form-group\">\n                              <label for=\"input-11\">Education Lists<span class=\"redColor\">*</span> </label><br>\n                              <div class=\"row\">\n                                <div class=\"col-sm-6\"> \n                                  <mat-form-field appearance=\"outline\">\n                                    <mat-label>Educational Qualification</mat-label>\n                                    <select matNativeControl required (change)=\"educationChange($event)\">\n                                      <option>Choose education</option>\n                                      <option *ngFor=\"let edu of educations\" [value]=\"edu.Qualification\" >\n                                        {{edu.Qualification}}\n                                      </option> \n                                    </select>\n                                  </mat-form-field>\n                                </div>\n                                <div class=\"col-sm-6\"> \n                                  <mat-form-field appearance=\"outline\">\n                                    <mat-label>Engineering Streams</mat-label>\n                                    <select matNativeControl required (change)=\"educationChangePopup($event)\">\n                                      <option>Choose Streams</option>\n                                      <option *ngFor=\"let eduStream of educationStreams\" [value]=\"eduStream.Stream_name\">\n                                        {{eduStream.Stream_name}}\n                                      </option> \n                                    </select>\n                                  </mat-form-field>\n                                </div> \n                              </div>   \n                             </div> \n                          </div> \n                          <i>Request an extra Education data</i>\n\n                          <div class=\"row\"> \n                           <div class=\"col-sm-4\"> \n                             <div class=\"form-group\">\n                               <label for=\"input-11\"> Education<span class=\"redColor\">*</span></label>\n                               <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Education\" id=\"Education\" \n                               name=\"Education\"  placeholder=\"Education name\">\n                              </div> \n                                </div> \n                                <div class=\"col-sm-4\"> \n                                  \n                             <div class=\"form-group\">\n                              <label for=\"input-11\"> Completed year<span class=\"redColor\">*</span></label> \n                                  <div class=\"input-group\">\n                                    <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Pass_year\" id=\"Pass_year\" \n                                    name=\"Pass_year\"  placeholder=\"Completed year\">                                                      \n                                    <div class=\"input-group-append\">\n                                      <span class=\"input-group-text\">\n                                        <button type=\"submit\" mat-raised-button color=\"primary\" >Add</button>\n\n                                      </span>\n                                    </div>\n                                    </div>\n                                 </div>\n                                     </div>   \n\n\n                                     <div class=\"col-sm-12\"> \n                                       <div class=\"row\">\n                                         <div class=\"inlinCol\" *ngFor=\"let edu of education_list \" > \n                                          <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                             <span>{{edu.Education}} </span>  \n                                          </button> \n                                        </div>\n                                       </div> \n                                     </div>\n\n                                     <div class=\"col-sm-12\">\n\n                               <div id=\"notSucess\" class=\"{{isEduError ? 'successClass' : 'notSucess'}}\">\n                                 <div class=\"row\">\n                                   <div class=\"col-sm-12\">\n                                     <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n                                       <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                                       <div class=\"alert-icon\">\n                                        <i class=\"zmdi zmdi-check-circle\"></i>\n                                       </div>\n                                       <div class=\"alert-message\">\n                                         <span><strong>Error! </strong> Please fill all the data.</span>\n                                       </div>\n                                       </div>\n                                   </div>\n                                 </div>\n                               </div>\n                               </div>\n                          </div> \n                          </form> \n                        <div class=\"goRight\">\n                          <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                          <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                            <span class=\"fa fa-forward\"></span> </button>\n                        </div>\n                    </mat-step>                 \n                <mat-step>\n                    <ng-template matStepLabel>Experience</ng-template>\n                    <form [formGroup]=\"jobRoleFormGroup\" (ngSubmit)=\"addJobTitle()\">\n                     <div class=\"row\"> \n                       <div class=\"form-group\">\n                         <label for=\"input-11\">Job Role<span class=\"redColor\">*</span> </label><br>\n                         <div class=\"Acheckbox icheck-inline col-sm-3\" *ngFor=\"let role of RJobRoles_List; let i=index\">\n                            <label class=\"container2 \"> {{role.Role_name}}\n                                <input type=\"checkbox\" [checked]=\"false\" value =\"{{role.Role_name}}\" (change)=\"roleChange($event)\">\n                                <span class=\"checkmark\"></span>\n                                </label>\n                          </div>  \n                        </div> \n                     </div> \n                     <p>Don't find the required Title ? Add custome Title</p>\n\n                    <div class=\"row\"> \n                     <div class=\"col-sm-4\"> \n                       <div class=\"form-group\">\n                         <label for=\"input-11\"> Job / Title<span class=\"redColor\">*</span></label>\n                         <input type=\"text\" class=\"form-control form-control-square\" formControlName=\"Job_title\" id=\"Job_title\" \n                         name=\"Job_title\"  placeholder=\"Job title\">\n                        </div> \n                          </div> \n                          <div class=\"col-sm-4\"> \n\n                        <div class=\"form-group\">\n                         <label for=\"input-11\"> Duration<span class=\"redColor\">*</span></label> \n                             <div class=\"input-group\">\n                               <input type=\"date\" class=\"form-control form-control-square\" formControlName=\"Job_duration\" id=\"Job_duration\" \n                               name=\"Job_duration\"  placeholder=\"Job Duration in years\">                                                      \n                               <div class=\"input-group-append\">\n                                 <span class=\"input-group-text\">\n                                   <button type=\"submit\" mat-raised-button color=\"primary\" >Add</button>\n\n                                 </span>\n                               </div>\n                               </div>\n                            </div> \n                               </div> \n                               <div class=\"col-sm-12\"> \n                                 <div class=\"row\">\n                                   <div class=\"inlinCol\" *ngFor=\"let job of jobRole_list \" > \n                                    <button type=\"button\" class=\"btn-social-text btn-youtube btn-round waves-effect waves-light m-1 \">\n                                       <span>{{job.Job_title}} </span>  \n                                    </button> \n                                  </div>\n                                 </div> \n                               </div> \n\n                               <div class=\"col-sm-12\">\n\n                         <div id=\"notSucess\" class=\"{{isJobError ? 'successClass' : 'notSucess'}}\">\n                           <div class=\"row\">\n                             <div class=\"col-sm-12\">\n                               <div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n                                 <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                                 <div class=\"alert-icon\">\n                                  <i class=\"zmdi zmdi-check-circle\"></i>\n                                 </div>\n                                 <div class=\"alert-message\">\n                                   <span><strong>Error! </strong> Please fill all the data.</span>\n                                 </div>\n                                 </div>\n                             </div>\n                           </div>\n                         </div>\n                         </div>\n                    </div> \n                    </form>\n\n                    <div class=\"goRight\">\n                     <button type=\"button\" mat-button matStepperPrevious>Back</button>\n                     <button type=\"button\" mat-raised-button color=\"primary\" matStepperNext>Next \n                      <span class=\"fa fa-forward\"></span> </button>\n                    </div>\n                </mat-step>\n\n                    <mat-step>\n                        <ng-template matStepLabel>Review</ng-template>\n\n                        <div class=\"row\">\n                          <div class=\"col-sm-4\">\n                           <p class=\"reviewP\"> Project Name : {{pName.value}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  Requirement Name : {{rName.value}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  No Of Resources : {{Nresources.value}}</p>\n                          </div>\n                        </div> \n                        \n                          \n                        \n                        <div class=\"row\">\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  Estimated Duration : {{eTime.value+'Weeks'}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\">  Min Guranteed Duration : {{mgTime.value+'Weeks'}}</p>\n                          </div>\n                          <div class=\"col-sm-4\">\n                            <p class=\"reviewP\"> Hour/Month : {{hmonth.value+'Hours'}}</p>\n                          </div> \n                        </div>  \n                        <div class=\"row\">\n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">Start Date : {{sTime.value}}</p>\n                          </div> \n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">End Date : {{eTime.value}}</p>\n                          </div> \n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">Hours/Week : {{hWeek.value+'Hours'}}</p>\n                          </div> \n                          <div class=\"col-sm-3\">\n                            <p class=\"reviewP\">Hour/Day : {{hDay.value+'Hours'}}</p>\n                          </div> \n                        </div>  \n                        <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                            <p class=\"reviewP\"> Description</p>\n                            <p class=\"reviewP\">{{description.value}}</p>\n                          </div>\n                          \n                        </div>\n\n  \n                    \n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-button (click)=\"stepper.reset()\">Reset</button>\n                          <button  mat-raised-button color=\"primary\" type=\"submit\">Agree and proceed <span class=\"fa fa-share\"></span></button>\n                       </mat-step>\n                  </mat-horizontal-stepper>\n \n \n </form> \n       </div>\n       </div>\n\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { ViewChild } from '@angular/core';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\nprojects=[];\nn =1;\n\ntoday = moment().format('YYYY-MM-DD'); \n@ViewChild(MatSort) sort: MatSort; \n@ViewChild(MatPaginator) paginator: MatPaginator;\ndataSource = new MatTableDataSource();\n\ndisplayedColumns: string[] = ['No','Status','Project_name', 'Start_date', \n'End_date','Remaining','Project_location','Action'];\n\nngAfterViewInit() { \n  this.dataSource.sort = this.sort;\n  this.dataSource.paginator = this.paginator;\n\n} \n\n  constructor(private ProjectService :ProjectService , private Router:Router) { }\n\n  ngOnInit(): void {\n    this.ProjectService.getProjects().subscribe(data =>{\n      console.log(data);\n        this.projects = data;\n        this.dataSource.data=data;\n  }, error => {\n    console.log(error); \n  });\n  }\n  createAssignment(Project_id){\n     this.Router.navigate(['/company/Projectmanagement/Createassignment',Project_id]); \n \n  }\n  gotoAssignment(Project_id){\n     this.Router.navigate(['/company/Projectmanagement/Requirements',Project_id]); \n \n  }\n  gotoProject(Project_id){\n    this.Router.navigate(['/company/Projectmanagement/ProjectDetails',Project_id]); \n\n  }\n  toogleActive(Project_id , currentValue){\n    if(currentValue == 1){\n      currentValue =0;\n    }else{ \n     currentValue =1;\n \n    }\n   this.ProjectService.toogleActive(Project_id,currentValue).subscribe(data =>{\n     console.log(data);   \n     this.ngOnInit();\n   \n   });\n  }\n\n  updateStart(e,Project_id){\n    let fromDate = e.value;\n    fromDate =  moment(fromDate).format('YYYY-MM-DD');\n    console.log(fromDate);\n    this.ProjectService.updateStart(fromDate,Project_id).subscribe(data =>{\n      console.log(data); \n      this.ngOnInit();  \n   \n    });\n\n  }\n  updateEnd(e,Project_id){\n    let toDate = e.value;\n    toDate =  moment(toDate).format('YYYY-MM-DD');\n    console.log(toDate);\n    this.ProjectService.updateEnd(toDate,Project_id).subscribe(data =>{\n      console.log(data);  \n      this.ngOnInit(); \n   \n    });\n  }\n\n}\n","\n<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-6\">\n            <h4 class=\"page-title\"> Project Lists</h4> \n       </div> \n       <div class=\"col-sm-6\">\n       <div class=\"right\">\n           <button type=\"button\" class=\"btn btn-primary m-1\" [routerLink]=\"['/company/Projectmanagement/Createproject']\" >Create New <span class=\"fa fa-plus\"></span> </button>\n       </div>\n   </div>\n       </div> \n  \n    <div class=\"card\">\n        <div class=\"card-body\">    \n    <div class=\"row\"> \n            <div class=\"col-sm-12\">\n\n\n                <div class=\"table-responsive\">\n                    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n                        <!-- Position Column -->\n                        <ng-container matColumnDef=\"No\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\n                          <td mat-cell *matCellDef=\"let element;let i = index;\"> {{i + 1}} </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Status\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                          <td mat-cell *matCellDef=\"let element\">   \n                            <mat-slide-toggle color='primary' [checked]=\"element.Status==1\" (click)=toogleActive(element.Project_id,element.Status)>\n                                <span *ngIf=\"element.Status==1\">Active</span> \n                                <span *ngIf=\"element.Status==0\">Inactive</span>\n                              </mat-slide-toggle>\n                          </td>\n                        </ng-container>\n                      \n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"Project_name\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.Project_name}} &nbsp;</td>\n                        </ng-container>\n                      \n                        <!-- Weight Column -->\n                        <ng-container matColumnDef=\"Project_location\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Location </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.Project_location}} </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Start_date\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Start date </th>\n                          <td mat-cell *matCellDef=\"let element\">  \n                            <mat-form-field appearance=\"legacy\" class=\"dateWidth\">\n                                <mat-label>{{element.Start_date}}</mat-label>\n                                <input matInput [matDatepicker]=\"picker\" [min]=\"today\" disabled (dateChange)=\"updateStart($event,element.Project_id)\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker disabled=\"false\" ></mat-datepicker>\n                              </mat-form-field>\n                          </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"End_date\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> End date </th>\n                          <td mat-cell *matCellDef=\"let element\">  \n                            <mat-form-field appearance=\"legacy\" class=\"dateWidth\">\n                                <mat-label>{{element.End_date}}</mat-label>\n                                <input matInput [matDatepicker]=\"picker\" [min]=\"today\" disabled (dateChange)=\"updateEnd($event,element.Project_id)\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker disabled=\"false\" ></mat-datepicker>\n                              </mat-form-field>\n\n                          </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Remaining\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Remaining </th>\n                          <td mat-cell *matCellDef=\"let element\"> {{element.Remaining + 'Days'}} </td>\n                        </ng-container>\n                      \n                        <!-- Symbol Column -->\n                        <ng-container matColumnDef=\"Action\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                          <td mat-cell *matCellDef=\"let element\">  \n                            <button mat-flat-button (click)=\"gotoProject(element.Project_id)\">\n                               <span class=\"fa fa-folder-open-o\"></span>  Details  \n                          </button>\n                          <button mat-flat-button (click)=\"gotoAssignment(element.Project_id)\">\n                            <span class=\"fa fa-newspaper-o\"></span>  Assignments\n                        </button>\n \n                          </td>\n                        </ng-container>\n                      \n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                      </table>\n                      \n                      </div> \n\n        </div>\n    </div>\n    </div>\n    </div>\n\n\n\n\n\n\n\n        <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>","import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core'; \nimport { FormBuilder, FormGroup, Validators,FormControl,FormArray } from '@angular/forms';\nimport {ProjectService} from '../../../Services/project.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-view-projects',\n  templateUrl: './view-projects.component.html',\n  styleUrls: ['./view-projects.component.css']\n})\nexport class ViewProjectsComponent implements OnInit {\n\n  Project_id;\n  assignmentLists=[];\n  project_data=[];\n  constructor(  private _Activatedroute:ActivatedRoute,private ProjectService :ProjectService, private formBuilder: FormBuilder,) { \n    this.Project_id =Number(this._Activatedroute.snapshot.paramMap.get(\"id\"));\n   \n  }\n  ngOnInit(): void {\n    this.getProjectData();\n    this.getAssignments();\n  }\n  getProjectData(){\nthis.ProjectService.getProjectById(this.Project_id).subscribe(data =>{\n  this.project_data['projectName'] = data['Project_name'];\n  this.project_data['Description'] = data['Description'];\n  this.project_data['Start_date'] = data['Start_date'];\n  this.project_data['End_date'] = data['End_date']; \n  this.project_data['Description'] = data['Description']; \n  this.project_data['Need_remote'] = data['Need_remote']; \n  this.project_data['Project_location'] = data['Project_location']; \n   console.log(data);\n});\n  }\n  getAssignments(){\n    this.ProjectService.getAssignmentsById(this.Project_id).subscribe(data =>{\n       \n      console.log(\"----\");\n      this.assignmentLists = data;\n      console.log(data);\n    });\n  }\n\n}\n","<app-menubar></app-menubar>\n<div class=\"content-wrapper\">\n   <div class=\"container-fluid\">\n\n    <div class=\"row pt-2 pb-2\">\n        <div class=\"col-sm-9\">\n            <h4 class=\"page-title\"> Project Details</h4> \n       </div> \n       </div> \n\n       <div class=\"card\">\n        <div class=\"card-body\">  \n       <div class=\"row\"> \n        <div class=\"col-sm-12\">\n            <div> \n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <h5>{{project_data['projectName']}} <i class=\"fa fa-edit\"></i> </h5>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"floright\">\n                            <p>Duration : {{project_data['Start_date']}} : {{project_data['End_date'] }} <i class=\"fa fa-bars\"></i> </p>\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                             \n                        <p><b>Description :</b></p>\n                        <p>{{project_data['Description']}}</p>\n                        <hr>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <p><b>Remote Availability : </b>{{project_data['Need_remote']}}</p>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <p><b>Project Location : </b>{{project_data['Project_location']}}</p>\n                        </div>\n                    </div>\n \n                <h5>Available Requirements</h5>\n                <div class=\"divid\" *ngFor=\"let item of assignmentLists\">\n                   * <a [routerLink]=\"[ '/path', routeParam ]\">{{item.Requirement_name}}</a>\n\n                    \n\n                </div>\n        </div>\n\n \n   \n        </div>\n        </div>\n\n    </div>\n</div>\n\n\n\n\n       <div class=\"overlay toggle-menu\"></div> \n    </div>\n    </div> \n<app-footer></app-footer>"],"sourceRoot":"webpack:///"}